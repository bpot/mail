module Mail
  grammar RFC5322
  
    include RFC5322Obsolete

    # Removed: no_fold_quote, NO_WS_CTL
    # rfc2822.treetop only: mtext, message_id_text, local_dot_atom, local_dot_atom_text, domain_text, quoted_domain, qdcontent, phrase_list, dcontent, mailbox_list_group, name_val_list, name_val_pair, item_name, item_value
    # XXX ^^^ helpers for parser?

    # Equivalent
    rule ALPHA
      [a-zA-Z]
    end
    
    rule DIGIT
      [0-9]
    end
    
    rule DQUOTE
      '"'
    end
    
    rule LF
      "\n"
    end
    
    rule CR
      "\r"
    end

    rule CRLF
      "\r\n"
    end

    rule WSP
      [\x09\x20]
    end
  
    rule ccontent
      ctext / quoted_pair / comment
    end

    rule comment
      "(" ( FWS? ccontent )* FWS? ")"
    end

    rule atext
      ALPHA / DIGIT / # Any character except controls,
      "!" / "#" /     #  SP, and specials.
      "$" / "%" /     #  Used for atoms
      "&" / "'" /
      "*" / "+" /
      "-" / "/" /
      "=" / "?" /
      "^" / "_" /
      "`" / "{" /
      "|" / "}" /
      "~"
    end

    rule atom
      CFWS? atext+ CFWS?
    end

    rule dot_atom
      CFWS? dot_atom_text CFWS?
    end

    rule specials
      "(" / ")" /     # Special characters used in
      "<" / ">" /     #  other parts of the syntax
      "[" / "]" /
      ":" / ";" /
      "@" / '\\' /
      "," / "." /
      DQUOTE
    end

    rule qcontent
      qtext / quoted_pair
    end

    rule word
      atom / quoted_string
    end

    rule phrase
      word+ / obs_phrase
      # XXX obs_phrase / word+
    end

    rule day_of_week
      (FWS? day_name) / obs_day_of_week
    end

    rule day_name
      "Mon" / "Tue" / "Wed" / "Thu" /
      "Fri" / "Sat" / "Sun"
    end

    rule date
      day month year
    end

    rule month
      "Jan" / "Feb" / "Mar" / "Apr" /
      "May" / "Jun" / "Jul" / "Aug" /
      "Sep" / "Oct" / "Nov" / "Dec"
    end

    rule time_of_day
      hour ":" minute ( ":" second )?
    end
    
    rule hour
      DIGIT DIGIT / obs_hour
    end
    
    rule minute
      DIGIT DIGIT / obs_minute
    end
    
    rule second
      DIGIT DIGIT / obs_second
    end

    rule mailbox
      name_addr / addr_spec
    end

    rule angle_addr
      CFWS? "<" addr_spec ">" CFWS? / obs_angle_addr
    end

    rule display_name
      phrase
    end

    rule addr_spec
      (local_part "@" domain) / local_part
    end

    rule local_part
      dot_atom / quoted_string / obs_local_part
    end
  
    rule domain
      dot_atom / domain_literal / obs_domain
    end

    rule return
      path CRLF
    end

    rule msg_id
      # Slightly modified definition
      (CFWS)? "<" id_left "@" id_right ">" (CFWS)?
    end
    
    # Equivalent in RFC but modified in rfc2822 treetop
    rule FWS    # Folding white space
      ((WSP* CRLF)? WSP+) / obs_FWS
    end

    rule dot_atom_text
      atext+ ("." atext+)*
    end

    rule quoted_string
      CFWS? DQUOTE quoted_content:(FWS? qcontent)+ FWS? DQUOTE CFWS?
    end

    rule address
      group {
    
        def dig_comments(comments, elements)
          elements.each { |elem|
            if elem.respond_to?(:comment)
              comments << elem.comment
            end
            dig_comments(comments, elem.elements) if elem.elements
           }
        end
    
        def comments
          comments = []
          dig_comments(comments, elements)
          comments
        end

      } /
      mailbox {

      def dig_comments(comments, elements)
        elements.each { |elem|
          if elem.respond_to?(:comment)
            comments << elem.comment
          end
          dig_comments(comments, elem.elements) if elem.elements
         }
      end

      def comments
        comments = []
        dig_comments(comments, elements)
        comments
      end

      }
    end

    rule name_addr
      display_name? angle_addr
    end

    rule mailbox_list
      (first_addr:mailbox other_addr:(("," / ";") addr_value:mailbox)*) / obs_mbox_list
    end

    rule address_list
      first_addr:address? other_addr:(FWS* ("," / ";") FWS* addr_value:address?)*
    end

    # Modified
    rule quoted_pair
      ("\\" (VCHAR / WSP)) / obs_qp
    end

    rule ctext
      [\x21-\x27] /    
      [\x2a-\x5b] /    
      [\x5d-\x7e] /   
      obs_ctext
    end

    rule qtext
      [\x21] /
      [\x23-\x5b] /
      [\x5d-\x7e] /
      obs_qtext
    end

    rule date_time
      ( day_of_week ",")? date time CFWS?
    end

    rule day
      (FWS? DIGIT DIGIT? FWS) / obs_day
    end

    rule year
      FWS DIGIT DIGIT DIGIT DIGIT FWS / obs_year
    end

    rule time
      time_of_day zone
    end

    # Modified to accept (FWS obs_zone) 
    rule zone
      #(FWS ( "+" / "-" ) DIGIT DIGIT DIGIT DIGIT) / obs_zone
      FWS ((( "+" / "-" ) DIGIT DIGIT DIGIT DIGIT) / obs_zone)
    end
  
    rule text
      [\x01-\x09]     /       # Characters excluding CR and LF
      [\x0b-\x0c]     /
      [\x0e-\x7e]
    end

    rule domain_literal
      CFWS? "[" (FWS? dtext)* FWS? "]" CFWS?
    end
    
    rule path
      angle_addr / (CFWS? "<" CFWS? ">" CFWS?)
    end

    rule received
      received_tokens:received_token* ";" date_time CRLF
    end

    # Modified in-between RFCs and in rfc2822 treetop
    rule CFWS
      ((FWS? comment)+ FWS?) / FWS
    end

    rule no_fold_literal
      "[" (dtext)* "]"
    end

    rule group
      group_name:display_name ":" group_list:group_list? ";" CFWS?
    end

    rule dtext
      [\x21-\x5a]  /  # The rest of the US-ASCII characters
      [\x5e-\x7e] /    #  not including "[", "]", or "\"
      obs_dtext
    end

    rule id_left
      dot_atom_text / obs_id_left
    end

    rule id_right
      dot_atom_text / no_fold_literal / obs_id_right
    end

    # New
    rule utext
      NO_WS_CTL /
      [\x21-\x7e] /
      obs_utext
    end

    rule received_token
      domain / word / angle_addr / addr_spec# / domain
    end

    #############################

    # Helpers not part of grammar?
    rule message_ids
      first_msg_id:msg_id other_msg_ids:( CFWS msg_id_value:msg_id )*
    end
  end
end
