
# line 1 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"

# line 51 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"


module Mail
  module Parsers
    module Ragel
      class EnvelopeFromParser
        def initialize
          
# line 14 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rb"
class << self
	attr_accessor :_envelope_from_actions
	private :_envelope_from_actions, :_envelope_from_actions=
end
self._envelope_from_actions = [
	0, 1, 0, 1, 1, 1, 2, 1, 
	4, 1, 5, 1, 6, 1, 7, 1, 
	8, 1, 9, 1, 10, 1, 11, 1, 
	12, 1, 13, 1, 15, 1, 16, 1, 
	17, 2, 0, 1, 2, 0, 16, 2, 
	1, 17, 2, 2, 9, 2, 2, 10, 
	2, 2, 11, 2, 2, 13, 2, 2, 
	15, 2, 2, 16, 2, 3, 15, 2, 
	4, 10, 2, 4, 16, 2, 5, 15, 
	2, 5, 16, 2, 6, 5, 2, 6, 
	11, 2, 6, 15, 2, 6, 16, 2, 
	9, 10, 2, 10, 12, 2, 11, 15, 
	2, 14, 12, 2, 16, 5, 3, 0, 
	1, 17, 3, 2, 3, 15, 3, 2, 
	9, 10, 3, 2, 11, 15, 3, 5, 
	3, 15, 3, 6, 5, 15, 3, 6, 
	11, 15, 3, 6, 16, 5, 3, 14, 
	12, 9, 3, 14, 12, 16, 4, 14, 
	12, 9, 10
]

class << self
	attr_accessor :_envelope_from_key_offsets
	private :_envelope_from_key_offsets, :_envelope_from_key_offsets=
end
self._envelope_from_key_offsets = [
	0, 0, 18, 36, 37, 39, 57, 63, 
	64, 66, 77, 83, 101, 102, 104, 122, 
	141, 160, 161, 163, 181, 186, 187, 189, 
	199, 204, 222, 223, 225, 243, 261, 262, 
	263, 264, 273, 275, 276, 277, 283, 284, 
	286, 292, 298, 302, 303, 305, 311, 312, 
	314, 320, 322, 327, 328, 330, 335, 341, 
	342, 344, 350, 352, 357, 358, 360, 367, 
	368, 370, 377, 379, 380, 382, 388, 389, 
	391, 397, 399, 403, 404, 406, 412, 413, 
	415, 421, 425, 430, 434, 435, 436, 437, 
	438, 439, 441, 442, 444, 445, 447, 448, 
	449, 450, 451, 452, 453, 454, 455, 457, 
	458, 460, 461, 462, 463, 464, 474, 481, 
	482, 484, 502, 506, 507, 509, 518, 522, 
	536, 538, 539, 541, 559, 578, 587, 588, 
	590, 592, 602, 609, 610, 612, 614, 624, 
	625, 627, 645, 655, 662, 663, 665, 682, 
	687, 688, 690, 700, 705, 707, 708, 710, 
	728, 746, 747, 749, 772, 790, 809, 828, 
	846, 862, 864, 866, 869, 888, 907, 927, 
	946, 966, 985, 1004, 1023, 1042, 1052, 1059, 
	1060, 1062, 1080, 1082, 1092, 1093, 1095, 1105, 
	1112, 1113, 1115, 1133, 1139, 1140, 1142, 1153, 
	1159, 1161, 1171, 1172, 1174, 1192, 1206, 1216, 
	1226, 1236, 1237, 1239, 1241, 1247, 1251, 1255
]

class << self
	attr_accessor :_envelope_from_trans_keys
	private :_envelope_from_trans_keys, :_envelope_from_trans_keys=
end
self._envelope_from_trans_keys = [
	9, 13, 32, 34, 40, 46, 61, 63, 
	33, 39, 42, 43, 45, 57, 65, 90, 
	94, 126, 9, 13, 32, 34, 40, 46, 
	61, 63, 33, 39, 42, 43, 45, 57, 
	65, 90, 94, 126, 10, 9, 32, 9, 
	13, 32, 34, 40, 46, 61, 64, 33, 
	39, 42, 43, 45, 57, 63, 90, 94, 
	126, 9, 13, 32, 40, 46, 64, 10, 
	9, 32, 9, 13, 32, 40, 46, 64, 
	70, 77, 83, 84, 87, 9, 13, 32, 
	40, 46, 64, 9, 13, 32, 34, 40, 
	45, 61, 63, 33, 39, 42, 43, 47, 
	57, 65, 90, 94, 126, 10, 9, 32, 
	9, 13, 32, 33, 40, 46, 61, 64, 
	35, 39, 42, 43, 45, 57, 63, 90, 
	94, 126, 9, 13, 32, 34, 40, 46, 
	61, 63, 91, 33, 39, 42, 43, 45, 
	57, 65, 90, 94, 126, 9, 13, 32, 
	34, 40, 46, 61, 63, 91, 33, 39, 
	42, 43, 45, 57, 65, 90, 94, 126, 
	10, 9, 32, 9, 13, 32, 34, 40, 
	46, 61, 63, 33, 39, 42, 43, 45, 
	57, 65, 90, 94, 126, 9, 13, 32, 
	40, 46, 10, 9, 32, 9, 13, 32, 
	40, 46, 70, 77, 83, 84, 87, 9, 
	13, 32, 40, 46, 9, 13, 32, 33, 
	40, 45, 61, 63, 35, 39, 42, 43, 
	47, 57, 65, 90, 94, 126, 10, 9, 
	32, 9, 13, 32, 33, 40, 46, 61, 
	63, 35, 39, 42, 43, 45, 57, 65, 
	90, 94, 126, 9, 13, 32, 33, 40, 
	45, 61, 63, 35, 39, 42, 43, 47, 
	57, 65, 90, 94, 126, 114, 105, 32, 
	32, 65, 68, 70, 74, 77, 78, 79, 
	83, 112, 117, 114, 32, 9, 13, 32, 
	40, 48, 57, 10, 9, 32, 9, 13, 
	32, 40, 48, 57, 9, 13, 32, 40, 
	48, 57, 9, 13, 32, 40, 10, 9, 
	32, 9, 13, 32, 40, 48, 57, 10, 
	9, 32, 9, 13, 32, 40, 48, 57, 
	48, 57, 9, 13, 32, 40, 58, 10, 
	9, 32, 9, 13, 32, 40, 58, 9, 
	13, 32, 40, 48, 57, 10, 9, 32, 
	9, 13, 32, 40, 48, 57, 48, 57, 
	9, 13, 32, 40, 58, 10, 9, 32, 
	9, 13, 32, 40, 58, 48, 57, 10, 
	9, 32, 9, 13, 32, 40, 58, 48, 
	57, 48, 57, 10, 9, 32, 9, 13, 
	32, 40, 48, 57, 10, 9, 32, 9, 
	13, 32, 40, 48, 57, 48, 57, 9, 
	13, 32, 40, 10, 9, 32, 9, 13, 
	32, 40, 48, 57, 10, 9, 32, 9, 
	13, 32, 40, 48, 57, 9, 13, 32, 
	40, 9, 13, 32, 40, 58, 9, 13, 
	32, 40, 103, 101, 99, 101, 98, 97, 
	117, 110, 108, 110, 97, 114, 121, 111, 
	118, 99, 116, 101, 112, 111, 110, 97, 
	117, 116, 104, 117, 117, 101, 101, 100, 
	9, 13, 32, 92, 1, 8, 11, 33, 
	35, 127, 13, 34, 92, 1, 9, 11, 
	127, 10, 9, 32, 9, 13, 32, 34, 
	40, 46, 61, 63, 33, 39, 42, 43, 
	45, 57, 65, 90, 94, 126, 9, 13, 
	32, 40, 10, 9, 32, 9, 13, 32, 
	40, 70, 77, 83, 84, 87, 9, 13, 
	32, 40, 34, 46, 61, 63, 33, 39, 
	42, 43, 45, 57, 65, 90, 94, 126, 
	-128, -1, 10, 9, 32, 9, 13, 32, 
	34, 40, 46, 61, 63, 33, 39, 42, 
	43, 45, 57, 65, 90, 94, 126, 9, 
	13, 32, 34, 40, 46, 61, 63, 91, 
	33, 39, 42, 43, 45, 57, 65, 90, 
	94, 126, 13, 92, 93, 1, 9, 11, 
	90, 94, 127, 10, 9, 32, -128, -1, 
	9, 13, 32, 92, 1, 8, 11, 33, 
	35, 127, 13, 34, 92, 1, 9, 11, 
	127, 10, 9, 32, -128, -1, 9, 13, 
	32, 92, 1, 8, 11, 33, 35, 127, 
	10, 9, 32, 9, 13, 32, 34, 40, 
	45, 61, 63, 33, 39, 42, 43, 47, 
	57, 65, 90, 94, 126, 9, 13, 32, 
	92, 1, 8, 11, 33, 35, 127, 13, 
	34, 92, 1, 9, 11, 127, 10, 9, 
	32, 9, 13, 32, 34, 40, 61, 64, 
	33, 39, 42, 43, 45, 57, 63, 90, 
	94, 126, 9, 13, 32, 40, 64, 10, 
	9, 32, 9, 13, 32, 40, 64, 70, 
	77, 83, 84, 87, 9, 13, 32, 40, 
	64, -128, -1, 10, 9, 32, 9, 13, 
	32, 34, 40, 46, 61, 64, 33, 39, 
	42, 43, 45, 57, 63, 90, 94, 126, 
	9, 13, 32, 34, 40, 45, 61, 64, 
	33, 39, 42, 43, 47, 57, 63, 90, 
	94, 126, 10, 9, 32, 9, 13, 32, 
	34, 40, 45, 61, 64, 70, 77, 83, 
	84, 87, 33, 39, 42, 43, 47, 57, 
	63, 90, 94, 126, 9, 13, 32, 34, 
	40, 45, 61, 64, 33, 39, 42, 43, 
	47, 57, 63, 90, 94, 126, 9, 13, 
	32, 33, 40, 46, 61, 64, 114, 35, 
	39, 42, 43, 45, 57, 63, 90, 94, 
	126, 9, 13, 32, 33, 40, 46, 61, 
	64, 105, 35, 39, 42, 43, 45, 57, 
	63, 90, 94, 126, 9, 13, 32, 33, 
	40, 46, 61, 64, 35, 39, 42, 43, 
	45, 57, 63, 90, 94, 126, 9, 13, 
	32, 40, 46, 64, 65, 68, 70, 74, 
	77, 78, 79, 83, 84, 87, 101, 114, 
	97, 111, 97, 101, 117, 9, 13, 32, 
	33, 40, 46, 61, 64, 111, 35, 39, 
	42, 43, 45, 57, 63, 90, 94, 126, 
	9, 13, 32, 33, 40, 46, 61, 64, 
	110, 35, 39, 42, 43, 45, 57, 63, 
	90, 94, 126, 9, 13, 32, 33, 40, 
	46, 61, 64, 97, 117, 35, 39, 42, 
	43, 45, 57, 63, 90, 94, 126, 9, 
	13, 32, 33, 40, 46, 61, 64, 116, 
	35, 39, 42, 43, 45, 57, 63, 90, 
	94, 126, 9, 13, 32, 33, 40, 46, 
	61, 64, 104, 117, 35, 39, 42, 43, 
	45, 57, 63, 90, 94, 126, 9, 13, 
	32, 33, 40, 46, 61, 64, 117, 35, 
	39, 42, 43, 45, 57, 63, 90, 94, 
	126, 9, 13, 32, 33, 40, 46, 61, 
	64, 101, 35, 39, 42, 43, 45, 57, 
	63, 90, 94, 126, 9, 13, 32, 33, 
	40, 46, 61, 64, 101, 35, 39, 42, 
	43, 45, 57, 63, 90, 94, 126, 9, 
	13, 32, 33, 40, 46, 61, 64, 100, 
	35, 39, 42, 43, 45, 57, 63, 90, 
	94, 126, 9, 13, 32, 92, 1, 8, 
	11, 33, 35, 127, 13, 34, 92, 1, 
	9, 11, 127, 10, 9, 32, 9, 13, 
	32, 34, 40, 46, 61, 64, 33, 39, 
	42, 43, 45, 57, 63, 90, 94, 126, 
	0, 127, 9, 13, 32, 92, 1, 8, 
	11, 33, 35, 127, 10, 9, 32, 9, 
	13, 32, 92, 1, 8, 11, 33, 35, 
	127, 13, 34, 92, 1, 9, 11, 127, 
	10, 9, 32, 9, 13, 32, 34, 40, 
	46, 61, 64, 33, 39, 42, 43, 45, 
	57, 63, 90, 94, 126, 9, 13, 32, 
	40, 46, 64, 10, 9, 32, 9, 13, 
	32, 40, 46, 64, 70, 77, 83, 84, 
	87, 9, 13, 32, 40, 46, 64, -128, 
	-1, 9, 13, 32, 92, 1, 8, 11, 
	33, 35, 127, 10, 9, 32, 9, 13, 
	32, 34, 40, 46, 61, 63, 33, 39, 
	42, 43, 45, 57, 65, 90, 94, 126, 
	34, 46, 61, 63, 33, 39, 42, 43, 
	45, 57, 65, 90, 94, 126, 9, 13, 
	32, 40, 41, 92, 1, 8, 11, 127, 
	9, 13, 32, 40, 41, 92, 1, 8, 
	11, 127, 9, 13, 32, 40, 41, 92, 
	1, 8, 11, 127, 10, 9, 32, 0, 
	127, 9, 13, 32, 40, 48, 57, 9, 
	13, 32, 40, 9, 13, 32, 40, 0
]

class << self
	attr_accessor :_envelope_from_single_lengths
	private :_envelope_from_single_lengths, :_envelope_from_single_lengths=
end
self._envelope_from_single_lengths = [
	0, 8, 8, 1, 2, 8, 6, 1, 
	2, 11, 6, 8, 1, 2, 8, 9, 
	9, 1, 2, 8, 5, 1, 2, 10, 
	5, 8, 1, 2, 8, 8, 1, 1, 
	1, 9, 2, 1, 1, 4, 1, 2, 
	4, 4, 4, 1, 2, 4, 1, 2, 
	4, 0, 5, 1, 2, 5, 4, 1, 
	2, 4, 0, 5, 1, 2, 5, 1, 
	2, 5, 0, 1, 2, 4, 1, 2, 
	4, 0, 4, 1, 2, 4, 1, 2, 
	4, 4, 5, 4, 1, 1, 1, 1, 
	1, 2, 1, 2, 1, 2, 1, 1, 
	1, 1, 1, 1, 1, 1, 2, 1, 
	2, 1, 1, 1, 1, 4, 3, 1, 
	2, 8, 4, 1, 2, 9, 4, 4, 
	0, 1, 2, 8, 9, 3, 1, 2, 
	0, 4, 3, 1, 2, 0, 4, 1, 
	2, 8, 4, 3, 1, 2, 7, 5, 
	1, 2, 10, 5, 0, 1, 2, 8, 
	8, 1, 2, 13, 8, 9, 9, 8, 
	16, 2, 2, 3, 9, 9, 10, 9, 
	10, 9, 9, 9, 9, 4, 3, 1, 
	2, 8, 0, 4, 1, 2, 4, 3, 
	1, 2, 8, 6, 1, 2, 11, 6, 
	0, 4, 1, 2, 8, 4, 6, 6, 
	6, 1, 2, 0, 4, 4, 4, 0
]

class << self
	attr_accessor :_envelope_from_range_lengths
	private :_envelope_from_range_lengths, :_envelope_from_range_lengths=
end
self._envelope_from_range_lengths = [
	0, 5, 5, 0, 0, 5, 0, 0, 
	0, 0, 0, 5, 0, 0, 5, 5, 
	5, 0, 0, 5, 0, 0, 0, 0, 
	0, 5, 0, 0, 5, 5, 0, 0, 
	0, 0, 0, 0, 0, 1, 0, 0, 
	1, 1, 0, 0, 0, 1, 0, 0, 
	1, 1, 0, 0, 0, 0, 1, 0, 
	0, 1, 1, 0, 0, 0, 1, 0, 
	0, 1, 1, 0, 0, 1, 0, 0, 
	1, 1, 0, 0, 0, 1, 0, 0, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 3, 2, 0, 
	0, 5, 0, 0, 0, 0, 0, 5, 
	1, 0, 0, 5, 5, 3, 0, 0, 
	1, 3, 2, 0, 0, 1, 3, 0, 
	0, 5, 3, 2, 0, 0, 5, 0, 
	0, 0, 0, 0, 1, 0, 0, 5, 
	5, 0, 0, 5, 5, 5, 5, 5, 
	0, 0, 0, 0, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 3, 2, 0, 
	0, 5, 1, 3, 0, 0, 3, 2, 
	0, 0, 5, 0, 0, 0, 0, 0, 
	1, 3, 0, 0, 5, 5, 2, 2, 
	2, 0, 0, 1, 1, 0, 0, 0
]

class << self
	attr_accessor :_envelope_from_index_offsets
	private :_envelope_from_index_offsets, :_envelope_from_index_offsets=
end
self._envelope_from_index_offsets = [
	0, 0, 14, 28, 30, 33, 47, 54, 
	56, 59, 71, 78, 92, 94, 97, 111, 
	126, 141, 143, 146, 160, 166, 168, 171, 
	182, 188, 202, 204, 207, 221, 235, 237, 
	239, 241, 251, 254, 256, 258, 264, 266, 
	269, 275, 281, 286, 288, 291, 297, 299, 
	302, 308, 310, 316, 318, 321, 327, 333, 
	335, 338, 344, 346, 352, 354, 357, 364, 
	366, 369, 376, 378, 380, 383, 389, 391, 
	394, 400, 402, 407, 409, 412, 418, 420, 
	423, 429, 434, 440, 445, 447, 449, 451, 
	453, 455, 458, 460, 463, 465, 468, 470, 
	472, 474, 476, 478, 480, 482, 484, 487, 
	489, 492, 494, 496, 498, 500, 508, 514, 
	516, 519, 533, 538, 540, 543, 553, 558, 
	568, 570, 572, 575, 589, 604, 611, 613, 
	616, 618, 626, 632, 634, 637, 639, 647, 
	649, 652, 666, 674, 680, 682, 685, 698, 
	704, 706, 709, 720, 726, 728, 730, 733, 
	747, 761, 763, 766, 785, 799, 814, 829, 
	843, 860, 863, 866, 870, 885, 900, 916, 
	931, 947, 962, 977, 992, 1007, 1015, 1021, 
	1023, 1026, 1040, 1042, 1050, 1052, 1055, 1063, 
	1069, 1071, 1074, 1088, 1095, 1097, 1100, 1112, 
	1119, 1121, 1129, 1131, 1134, 1148, 1158, 1167, 
	1176, 1185, 1187, 1190, 1192, 1198, 1203, 1208
]

class << self
	attr_accessor :_envelope_from_indicies
	private :_envelope_from_indicies, :_envelope_from_indicies=
end
self._envelope_from_indicies = [
	0, 2, 0, 4, 5, 6, 3, 3, 
	3, 3, 3, 3, 3, 1, 7, 8, 
	7, 10, 11, 12, 9, 9, 9, 9, 
	9, 9, 9, 1, 13, 1, 7, 7, 
	1, 14, 15, 16, 18, 19, 20, 17, 
	21, 17, 17, 17, 17, 17, 1, 22, 
	23, 24, 25, 26, 27, 1, 28, 1, 
	22, 22, 1, 22, 23, 24, 25, 26, 
	27, 29, 30, 31, 32, 33, 1, 34, 
	35, 36, 37, 38, 39, 1, 26, 40, 
	26, 42, 43, 41, 41, 41, 41, 41, 
	41, 41, 41, 1, 44, 1, 26, 26, 
	1, 45, 46, 47, 48, 49, 50, 48, 
	51, 48, 48, 48, 48, 48, 1, 52, 
	53, 52, 55, 56, 57, 54, 54, 58, 
	54, 54, 54, 54, 54, 1, 59, 60, 
	59, 62, 63, 64, 61, 61, 65, 61, 
	61, 61, 61, 61, 1, 66, 1, 59, 
	59, 1, 67, 68, 69, 62, 71, 72, 
	70, 70, 70, 70, 70, 70, 70, 1, 
	73, 74, 75, 76, 77, 1, 78, 1, 
	73, 73, 1, 73, 74, 75, 76, 77, 
	29, 30, 31, 32, 33, 1, 79, 80, 
	81, 82, 83, 1, 77, 84, 77, 85, 
	86, 85, 85, 85, 85, 85, 85, 85, 
	85, 1, 87, 1, 77, 77, 1, 67, 
	68, 69, 88, 89, 90, 88, 88, 88, 
	88, 88, 88, 88, 1, 83, 91, 83, 
	92, 93, 92, 92, 92, 92, 92, 92, 
	92, 92, 1, 94, 1, 95, 1, 96, 
	1, 96, 97, 98, 99, 100, 101, 102, 
	103, 104, 1, 105, 106, 1, 107, 1, 
	108, 1, 108, 109, 108, 110, 111, 1, 
	112, 1, 108, 108, 1, 113, 114, 113, 
	115, 116, 1, 117, 118, 119, 120, 117, 
	1, 117, 118, 119, 120, 1, 121, 1, 
	117, 117, 1, 119, 122, 119, 123, 124, 
	1, 125, 1, 119, 119, 1, 126, 127, 
	126, 128, 129, 1, 130, 1, 130, 131, 
	130, 132, 133, 1, 134, 1, 130, 130, 
	1, 135, 136, 135, 137, 138, 1, 133, 
	139, 133, 140, 141, 1, 142, 1, 133, 
	133, 1, 138, 143, 138, 144, 145, 1, 
	146, 1, 146, 147, 148, 149, 150, 1, 
	151, 1, 146, 146, 1, 148, 152, 148, 
	153, 150, 154, 1, 155, 1, 148, 148, 
	1, 156, 157, 156, 158, 160, 159, 1, 
	161, 1, 162, 1, 163, 163, 1, 150, 
	164, 150, 165, 166, 1, 167, 1, 150, 
	150, 1, 160, 168, 160, 169, 170, 1, 
	171, 1, 171, 172, 173, 174, 1, 175, 
	1, 171, 171, 1, 173, 176, 173, 177, 
	154, 1, 178, 1, 173, 173, 1, 179, 
	180, 179, 181, 159, 1, 182, 183, 179, 
	184, 1, 185, 186, 156, 187, 160, 1, 
	188, 189, 126, 190, 1, 107, 1, 191, 
	1, 107, 1, 192, 1, 107, 1, 193, 
	194, 1, 107, 1, 107, 107, 1, 195, 
	1, 107, 107, 1, 196, 1, 107, 1, 
	197, 1, 107, 1, 198, 1, 107, 1, 
	199, 1, 95, 1, 200, 199, 1, 95, 
	1, 201, 202, 1, 95, 1, 95, 1, 
	203, 1, 95, 1, 62, 205, 62, 206, 
	204, 204, 204, 1, 207, 208, 206, 204, 
	204, 1, 209, 1, 204, 204, 1, 210, 
	211, 212, 62, 213, 64, 208, 208, 208, 
	208, 208, 208, 208, 1, 210, 211, 212, 
	213, 1, 214, 1, 210, 210, 1, 210, 
	211, 212, 213, 29, 30, 31, 32, 33, 
	1, 215, 216, 217, 218, 1, 62, 64, 
	208, 208, 208, 208, 208, 208, 208, 1, 
	1, 204, 219, 1, 62, 62, 1, 77, 
	84, 77, 62, 86, 64, 61, 61, 61, 
	61, 61, 61, 61, 1, 220, 221, 220, 
	223, 224, 225, 222, 222, 226, 222, 222, 
	222, 222, 222, 1, 227, 228, 210, 65, 
	65, 65, 1, 229, 1, 65, 65, 1, 
	1, 65, 231, 232, 231, 233, 230, 230, 
	230, 1, 235, 236, 237, 234, 234, 1, 
	238, 1, 234, 234, 1, 1, 234, 239, 
	240, 239, 237, 234, 234, 234, 1, 241, 
	1, 239, 239, 1, 38, 242, 38, 244, 
	245, 243, 243, 243, 243, 243, 243, 243, 
	243, 1, 18, 247, 18, 248, 246, 246, 
	246, 1, 249, 250, 248, 246, 246, 1, 
	251, 1, 246, 246, 1, 252, 253, 254, 
	18, 255, 250, 256, 250, 250, 250, 250, 
	250, 1, 257, 258, 259, 260, 27, 1, 
	261, 1, 257, 257, 1, 257, 258, 259, 
	260, 27, 29, 30, 31, 32, 33, 1, 
	262, 263, 264, 265, 39, 1, 1, 246, 
	266, 1, 18, 18, 1, 267, 268, 269, 
	271, 272, 250, 270, 256, 270, 270, 270, 
	270, 270, 1, 273, 274, 275, 42, 276, 
	41, 41, 27, 41, 41, 41, 41, 41, 
	1, 277, 1, 273, 273, 1, 273, 274, 
	275, 42, 276, 41, 41, 27, 278, 279, 
	280, 281, 282, 41, 41, 41, 41, 41, 
	1, 283, 284, 285, 244, 286, 243, 243, 
	39, 243, 243, 243, 243, 243, 1, 45, 
	46, 47, 48, 49, 50, 48, 51, 287, 
	48, 48, 48, 48, 48, 1, 45, 46, 
	47, 48, 49, 50, 48, 51, 288, 48, 
	48, 48, 48, 48, 1, 45, 46, 289, 
	48, 49, 50, 48, 51, 48, 48, 48, 
	48, 48, 1, 22, 23, 290, 25, 26, 
	27, 97, 98, 291, 100, 292, 102, 103, 
	293, 32, 33, 1, 192, 94, 1, 195, 
	199, 1, 200, 198, 199, 1, 45, 46, 
	47, 48, 49, 50, 48, 51, 294, 48, 
	48, 48, 48, 48, 1, 45, 46, 47, 
	48, 49, 50, 48, 51, 288, 48, 48, 
	48, 48, 48, 1, 45, 46, 47, 48, 
	49, 50, 48, 51, 295, 294, 48, 48, 
	48, 48, 48, 1, 45, 46, 47, 48, 
	49, 50, 48, 51, 288, 48, 48, 48, 
	48, 48, 1, 45, 46, 47, 48, 49, 
	50, 48, 51, 296, 297, 48, 48, 48, 
	48, 48, 1, 45, 46, 47, 48, 49, 
	50, 48, 51, 288, 48, 48, 48, 48, 
	48, 1, 45, 46, 47, 48, 49, 50, 
	48, 51, 288, 48, 48, 48, 48, 48, 
	1, 45, 46, 47, 48, 49, 50, 48, 
	51, 298, 48, 48, 48, 48, 48, 1, 
	45, 46, 47, 48, 49, 50, 48, 51, 
	288, 48, 48, 48, 48, 48, 1, 300, 
	301, 300, 302, 299, 299, 299, 1, 304, 
	305, 306, 303, 303, 1, 307, 1, 303, 
	303, 1, 308, 309, 310, 18, 311, 312, 
	250, 256, 250, 250, 250, 250, 250, 1, 
	303, 1, 313, 314, 313, 306, 303, 303, 
	303, 1, 315, 1, 313, 313, 1, 317, 
	318, 317, 319, 316, 316, 316, 1, 321, 
	322, 323, 320, 320, 1, 324, 1, 320, 
	320, 1, 325, 326, 327, 18, 328, 312, 
	250, 329, 250, 250, 250, 250, 250, 1, 
	330, 331, 332, 333, 26, 334, 1, 335, 
	1, 330, 330, 1, 330, 331, 332, 333, 
	26, 334, 29, 30, 31, 32, 33, 1, 
	336, 337, 338, 339, 38, 340, 1, 1, 
	320, 341, 342, 341, 323, 320, 320, 320, 
	1, 343, 1, 341, 341, 1, 344, 345, 
	344, 347, 348, 349, 346, 346, 346, 346, 
	346, 346, 346, 1, 18, 350, 250, 250, 
	250, 250, 250, 250, 250, 1, 352, 353, 
	352, 354, 355, 356, 351, 351, 1, 358, 
	359, 358, 360, 361, 362, 357, 357, 1, 
	363, 364, 363, 360, 365, 362, 357, 357, 
	1, 366, 1, 363, 363, 1, 357, 1, 
	163, 367, 163, 368, 161, 1, 163, 367, 
	163, 368, 1, 369, 370, 369, 371, 1, 
	1, 0
]

class << self
	attr_accessor :_envelope_from_trans_targs
	private :_envelope_from_trans_targs, :_envelope_from_trans_targs=
end
self._envelope_from_trans_targs = [
	2, 0, 3, 5, 182, 196, 197, 2, 
	3, 5, 182, 196, 197, 4, 6, 7, 
	9, 5, 138, 10, 151, 15, 6, 7, 
	9, 10, 11, 15, 8, 30, 100, 102, 
	104, 107, 6, 7, 9, 10, 11, 15, 
	12, 14, 129, 137, 13, 6, 7, 9, 
	14, 10, 11, 15, 16, 17, 19, 109, 
	124, 119, 125, 16, 17, 19, 109, 124, 
	119, 125, 18, 20, 21, 23, 19, 24, 
	123, 20, 21, 23, 24, 25, 22, 20, 
	21, 23, 24, 25, 26, 28, 29, 27, 
	28, 24, 25, 26, 28, 29, 31, 32, 
	33, 34, 85, 87, 89, 92, 94, 96, 
	98, 35, 84, 36, 37, 38, 40, 41, 
	39, 37, 38, 40, 41, 42, 43, 45, 
	83, 44, 46, 48, 49, 47, 45, 46, 
	48, 49, 50, 51, 53, 54, 52, 50, 
	51, 53, 54, 55, 57, 58, 56, 55, 
	57, 58, 59, 60, 62, 82, 69, 61, 
	63, 65, 66, 64, 62, 63, 65, 66, 
	69, 204, 68, 205, 70, 72, 73, 71, 
	70, 72, 73, 74, 75, 77, 81, 76, 
	78, 80, 79, 77, 78, 80, 74, 75, 
	81, 59, 60, 82, 42, 43, 83, 86, 
	88, 90, 91, 93, 95, 97, 99, 101, 
	103, 105, 106, 108, 110, 121, 120, 111, 
	113, 112, 114, 115, 117, 118, 116, 114, 
	115, 117, 118, 122, 16, 17, 19, 109, 
	124, 119, 125, 126, 128, 127, 130, 134, 
	135, 133, 130, 131, 6, 133, 132, 134, 
	135, 136, 12, 14, 129, 137, 139, 149, 
	148, 140, 142, 141, 143, 144, 146, 147, 
	15, 143, 144, 146, 147, 145, 143, 144, 
	146, 147, 150, 152, 153, 155, 5, 173, 
	156, 152, 153, 155, 156, 154, 157, 164, 
	166, 168, 171, 152, 153, 155, 156, 158, 
	159, 160, 160, 161, 162, 163, 165, 167, 
	169, 170, 172, 174, 179, 180, 178, 174, 
	175, 177, 178, 176, 6, 7, 9, 10, 
	151, 179, 180, 181, 183, 193, 194, 192, 
	183, 184, 186, 192, 185, 187, 188, 190, 
	191, 15, 187, 188, 190, 191, 15, 189, 
	187, 188, 190, 191, 15, 193, 194, 195, 
	2, 3, 5, 182, 196, 197, 197, 199, 
	200, 201, 199, 207, 203, 199, 200, 201, 
	199, 207, 203, 200, 201, 207, 202, 67, 
	206, 205, 67, 206
]

class << self
	attr_accessor :_envelope_from_trans_actions
	private :_envelope_from_trans_actions, :_envelope_from_trans_actions=
end
self._envelope_from_trans_actions = [
	96, 0, 96, 142, 134, 138, 134, 0, 
	0, 87, 17, 29, 17, 0, 75, 75, 
	122, 0, 0, 130, 9, 75, 0, 0, 
	27, 29, 0, 0, 0, 23, 23, 23, 
	23, 23, 5, 5, 54, 57, 5, 5, 
	0, 19, 0, 29, 0, 9, 9, 69, 
	0, 72, 9, 9, 7, 7, 63, 7, 
	66, 7, 7, 0, 0, 19, 0, 29, 
	0, 0, 0, 9, 9, 118, 0, 99, 
	9, 0, 0, 60, 29, 0, 0, 5, 
	5, 106, 57, 5, 0, 19, 29, 0, 
	0, 72, 9, 5, 45, 57, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 29, 0, 
	0, 5, 5, 57, 5, 0, 0, 0, 
	29, 0, 0, 29, 0, 0, 5, 5, 
	57, 5, 0, 0, 29, 0, 0, 5, 
	5, 57, 5, 0, 29, 0, 0, 5, 
	57, 5, 0, 0, 0, 29, 0, 0, 
	0, 29, 0, 0, 5, 5, 57, 5, 
	5, 0, 0, 0, 0, 29, 0, 0, 
	5, 57, 5, 0, 0, 0, 29, 0, 
	0, 29, 0, 5, 5, 57, 5, 5, 
	57, 5, 5, 57, 5, 5, 57, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 60, 29, 0, 5, 
	5, 106, 57, 0, 5, 5, 45, 5, 
	57, 5, 5, 0, 0, 0, 13, 13, 
	13, 13, 0, 0, 15, 0, 0, 0, 
	0, 0, 5, 45, 5, 57, 0, 0, 
	0, 0, 0, 0, 11, 11, 81, 84, 
	11, 0, 0, 27, 29, 0, 5, 5, 
	54, 57, 0, 11, 11, 81, 19, 0, 
	84, 0, 0, 27, 29, 0, 90, 90, 
	90, 90, 90, 5, 5, 54, 57, 0, 
	0, 69, 27, 23, 23, 23, 0, 0, 
	0, 0, 0, 13, 13, 13, 13, 0, 
	0, 15, 0, 0, 11, 11, 81, 84, 
	0, 0, 0, 0, 13, 13, 13, 13, 
	0, 0, 15, 0, 0, 11, 11, 126, 
	84, 78, 0, 0, 93, 29, 21, 0, 
	5, 5, 114, 57, 48, 0, 0, 0, 
	5, 5, 110, 42, 57, 42, 0, 1, 
	33, 33, 36, 102, 1, 0, 3, 3, 
	29, 39, 0, 0, 0, 31, 0, 0, 
	29, 5, 5, 57
]

class << self
	attr_accessor :_envelope_from_eof_actions
	private :_envelope_from_eof_actions, :_envelope_from_eof_actions=
end
self._envelope_from_eof_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 25, 25, 51, 0
]

class << self
	attr_accessor :envelope_from_start
end
self.envelope_from_start = 1;
class << self
	attr_accessor :envelope_from_first_final
end
self.envelope_from_first_final = 204;
class << self
	attr_accessor :envelope_from_error
end
self.envelope_from_error = 0;

class << self
	attr_accessor :envelope_from_en_comment_tail
end
self.envelope_from_en_comment_tail = 198;
class << self
	attr_accessor :envelope_from_en_main
end
self.envelope_from_en_main = 1;


# line 59 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
        end
        
        def parse(data)
          envelope_from = Data::EnvelopeFromData.new
          quoted_string = nil
          mark_address = nil

          p = 0
          eof = data.length
          stack = []

          
# line 673 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = envelope_from_start
	top = 0
end

# line 71 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
          
# line 683 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rb"
begin
	_klen, _trans, _keys, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_keys = _envelope_from_key_offsets[cs]
	_trans = _envelope_from_index_offsets[cs]
	_klen = _envelope_from_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if data[p].ord < _envelope_from_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif data[p].ord > _envelope_from_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _envelope_from_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if data[p].ord < _envelope_from_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif data[p].ord > _envelope_from_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	_trans = _envelope_from_indicies[_trans]
	cs = _envelope_from_trans_targs[_trans]
	if _envelope_from_trans_actions[_trans] != 0
		_acts = _envelope_from_trans_actions[_trans]
		_nacts = _envelope_from_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _envelope_from_actions[_acts - 1]
when 0 then
# line 8 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 1 then
# line 9 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 2 then
# line 10 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 3 then
# line 28 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 4 then
# line 29 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
 		end
when 5 then
# line 30 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 6 then
# line 31 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 7 then
# line 32 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 8 then
# line 33 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 9 then
# line 35 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 10 then
# line 36 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 11 then
# line 37 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 12 then
# line 40 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
 mark = p 		end
when 14 then
# line 42 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
 
    mark_address = p
  		end
when 15 then
# line 45 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
 
    envelope_from.address = data[mark_address..(p-1)]
  		end
when 16 then
# line 5 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/common.rl"
		begin
 	begin
		stack[top] = cs
		top+= 1
		cs = 198
		_trigger_goto = true
		_goto_level = _again
		break
	end
 		end
when 17 then
# line 7 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/common.rl"
		begin
 	begin
		top -= 1
		cs = stack[top]
		_trigger_goto = true
		_goto_level = _again
		break
	end
 		end
# line 851 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	if cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	if p == eof
	__acts = _envelope_from_eof_actions[cs]
	__nacts =  _envelope_from_actions[__acts]
	__acts += 1
	while __nacts > 0
		__nacts -= 1
		__acts += 1
		case _envelope_from_actions[__acts - 1]
when 2 then
# line 10 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 13 then
# line 41 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
 envelope_from.ctime_date = data[mark..(p-1)] 		end
# line 887 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rb"
		end # eof action switch
	end
	if _trigger_goto
		next
	end
end
	end
	if _goto_level <= _out
		break
	end
	end
	end

# line 72 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"

          if p == eof && cs >= 
# line 904 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rb"
204
# line 73 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"

            envelope_from
          else
            envelope_from.error = "Only able to parse up to #{data[0..p]}"
            envelope_from
          end

          envelope_from
        end
      end
    end
  end
end
