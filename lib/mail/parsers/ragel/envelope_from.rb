
# line 1 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"

# line 53 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"


module Mail
  module Parsers
    module Ragel
      class EnvelopeFromParser
        def initialize
          
# line 14 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rb"
class << self
	attr_accessor :_envelope_from_actions
	private :_envelope_from_actions, :_envelope_from_actions=
end
self._envelope_from_actions = [
	0, 1, 0, 1, 1, 1, 2, 1, 
	4, 1, 5, 1, 6, 1, 7, 1, 
	9, 1, 11, 1, 12, 1, 13, 1, 
	14, 1, 16, 1, 17, 1, 18, 2, 
	0, 1, 2, 0, 17, 2, 1, 18, 
	2, 2, 9, 2, 2, 12, 2, 2, 
	14, 2, 2, 16, 2, 2, 17, 2, 
	3, 16, 2, 4, 9, 2, 4, 17, 
	2, 5, 16, 2, 5, 17, 2, 9, 
	13, 2, 11, 5, 2, 11, 12, 2, 
	11, 16, 2, 11, 17, 2, 12, 10, 
	2, 17, 5, 3, 0, 1, 18, 3, 
	2, 3, 16, 3, 2, 12, 10, 3, 
	5, 3, 16, 3, 11, 5, 16, 3, 
	11, 12, 5, 3, 11, 12, 10, 3, 
	11, 17, 5, 3, 15, 13, 8, 4, 
	15, 13, 8, 9, 4, 15, 13, 8, 
	17
]

class << self
	attr_accessor :_envelope_from_key_offsets
	private :_envelope_from_key_offsets, :_envelope_from_key_offsets=
end
self._envelope_from_key_offsets = [
	0, 0, 18, 36, 37, 39, 57, 63, 
	64, 66, 77, 83, 101, 102, 104, 122, 
	128, 129, 131, 142, 148, 167, 186, 187, 
	189, 207, 212, 213, 215, 225, 230, 248, 
	249, 251, 269, 287, 288, 289, 290, 299, 
	301, 302, 303, 309, 310, 312, 318, 324, 
	328, 329, 331, 337, 338, 340, 346, 348, 
	353, 354, 356, 361, 367, 368, 370, 376, 
	378, 383, 384, 386, 393, 394, 396, 403, 
	405, 406, 408, 414, 415, 417, 423, 425, 
	429, 430, 432, 438, 439, 441, 447, 451, 
	456, 460, 461, 462, 463, 464, 465, 467, 
	468, 470, 471, 473, 474, 475, 476, 477, 
	478, 479, 480, 481, 483, 484, 486, 487, 
	488, 489, 490, 500, 507, 508, 510, 528, 
	532, 533, 535, 544, 548, 562, 564, 565, 
	567, 585, 604, 613, 614, 616, 618, 628, 
	635, 636, 638, 640, 650, 651, 653, 671, 
	681, 688, 689, 691, 708, 713, 714, 716, 
	726, 731, 733, 734, 736, 754, 772, 773, 
	775, 798, 816, 835, 854, 872, 888, 890, 
	892, 895, 914, 933, 953, 972, 992, 1011, 
	1030, 1049, 1068, 1078, 1085, 1086, 1088, 1106, 
	1108, 1118, 1119, 1121, 1131, 1138, 1139, 1141, 
	1159, 1165, 1166, 1168, 1179, 1185, 1187, 1197, 
	1198, 1200, 1218, 1232, 1242, 1252, 1262, 1263, 
	1265, 1267, 1273, 1277, 1281
]

class << self
	attr_accessor :_envelope_from_trans_keys
	private :_envelope_from_trans_keys, :_envelope_from_trans_keys=
end
self._envelope_from_trans_keys = [
	9, 13, 32, 34, 40, 46, 61, 63, 
	33, 39, 42, 43, 45, 57, 65, 90, 
	94, 126, 9, 13, 32, 34, 40, 46, 
	61, 63, 33, 39, 42, 43, 45, 57, 
	65, 90, 94, 126, 10, 9, 32, 9, 
	13, 32, 34, 40, 46, 61, 64, 33, 
	39, 42, 43, 45, 57, 63, 90, 94, 
	126, 9, 13, 32, 40, 46, 64, 10, 
	9, 32, 9, 13, 32, 40, 46, 64, 
	70, 77, 83, 84, 87, 9, 13, 32, 
	40, 46, 64, 9, 13, 32, 34, 40, 
	45, 61, 63, 33, 39, 42, 43, 47, 
	57, 65, 90, 94, 126, 10, 9, 32, 
	9, 13, 32, 33, 40, 46, 61, 64, 
	35, 39, 42, 43, 45, 57, 63, 90, 
	94, 126, 9, 13, 32, 40, 46, 64, 
	10, 9, 32, 9, 13, 32, 40, 46, 
	64, 70, 77, 83, 84, 87, 9, 13, 
	32, 40, 46, 64, 9, 13, 32, 34, 
	40, 46, 61, 63, 91, 33, 39, 42, 
	43, 45, 57, 65, 90, 94, 126, 9, 
	13, 32, 34, 40, 46, 61, 63, 91, 
	33, 39, 42, 43, 45, 57, 65, 90, 
	94, 126, 10, 9, 32, 9, 13, 32, 
	34, 40, 46, 61, 63, 33, 39, 42, 
	43, 45, 57, 65, 90, 94, 126, 9, 
	13, 32, 40, 46, 10, 9, 32, 9, 
	13, 32, 40, 46, 70, 77, 83, 84, 
	87, 9, 13, 32, 40, 46, 9, 13, 
	32, 33, 40, 45, 61, 63, 35, 39, 
	42, 43, 47, 57, 65, 90, 94, 126, 
	10, 9, 32, 9, 13, 32, 33, 40, 
	46, 61, 63, 35, 39, 42, 43, 45, 
	57, 65, 90, 94, 126, 9, 13, 32, 
	33, 40, 45, 61, 63, 35, 39, 42, 
	43, 47, 57, 65, 90, 94, 126, 114, 
	105, 32, 32, 65, 68, 70, 74, 77, 
	78, 79, 83, 112, 117, 114, 32, 9, 
	13, 32, 40, 48, 57, 10, 9, 32, 
	9, 13, 32, 40, 48, 57, 9, 13, 
	32, 40, 48, 57, 9, 13, 32, 40, 
	10, 9, 32, 9, 13, 32, 40, 48, 
	57, 10, 9, 32, 9, 13, 32, 40, 
	48, 57, 48, 57, 9, 13, 32, 40, 
	58, 10, 9, 32, 9, 13, 32, 40, 
	58, 9, 13, 32, 40, 48, 57, 10, 
	9, 32, 9, 13, 32, 40, 48, 57, 
	48, 57, 9, 13, 32, 40, 58, 10, 
	9, 32, 9, 13, 32, 40, 58, 48, 
	57, 10, 9, 32, 9, 13, 32, 40, 
	58, 48, 57, 48, 57, 10, 9, 32, 
	9, 13, 32, 40, 48, 57, 10, 9, 
	32, 9, 13, 32, 40, 48, 57, 48, 
	57, 9, 13, 32, 40, 10, 9, 32, 
	9, 13, 32, 40, 48, 57, 10, 9, 
	32, 9, 13, 32, 40, 48, 57, 9, 
	13, 32, 40, 9, 13, 32, 40, 58, 
	9, 13, 32, 40, 103, 101, 99, 101, 
	98, 97, 117, 110, 108, 110, 97, 114, 
	121, 111, 118, 99, 116, 101, 112, 111, 
	110, 97, 117, 116, 104, 117, 117, 101, 
	101, 100, 9, 13, 32, 92, 1, 8, 
	11, 33, 35, 127, 13, 34, 92, 1, 
	9, 11, 127, 10, 9, 32, 9, 13, 
	32, 34, 40, 46, 61, 63, 33, 39, 
	42, 43, 45, 57, 65, 90, 94, 126, 
	9, 13, 32, 40, 10, 9, 32, 9, 
	13, 32, 40, 70, 77, 83, 84, 87, 
	9, 13, 32, 40, 34, 46, 61, 63, 
	33, 39, 42, 43, 45, 57, 65, 90, 
	94, 126, 0, 127, 10, 9, 32, 9, 
	13, 32, 34, 40, 46, 61, 63, 33, 
	39, 42, 43, 45, 57, 65, 90, 94, 
	126, 9, 13, 32, 34, 40, 46, 61, 
	63, 91, 33, 39, 42, 43, 45, 57, 
	65, 90, 94, 126, 13, 92, 93, 1, 
	9, 11, 90, 94, 127, 10, 9, 32, 
	0, 127, 9, 13, 32, 92, 1, 8, 
	11, 33, 35, 127, 13, 34, 92, 1, 
	9, 11, 127, 10, 9, 32, 0, 127, 
	9, 13, 32, 92, 1, 8, 11, 33, 
	35, 127, 10, 9, 32, 9, 13, 32, 
	34, 40, 45, 61, 63, 33, 39, 42, 
	43, 47, 57, 65, 90, 94, 126, 9, 
	13, 32, 92, 1, 8, 11, 33, 35, 
	127, 13, 34, 92, 1, 9, 11, 127, 
	10, 9, 32, 9, 13, 32, 34, 40, 
	61, 64, 33, 39, 42, 43, 45, 57, 
	63, 90, 94, 126, 9, 13, 32, 40, 
	64, 10, 9, 32, 9, 13, 32, 40, 
	64, 70, 77, 83, 84, 87, 9, 13, 
	32, 40, 64, -128, -1, 10, 9, 32, 
	9, 13, 32, 34, 40, 46, 61, 64, 
	33, 39, 42, 43, 45, 57, 63, 90, 
	94, 126, 9, 13, 32, 34, 40, 45, 
	61, 64, 33, 39, 42, 43, 47, 57, 
	63, 90, 94, 126, 10, 9, 32, 9, 
	13, 32, 34, 40, 45, 61, 64, 70, 
	77, 83, 84, 87, 33, 39, 42, 43, 
	47, 57, 63, 90, 94, 126, 9, 13, 
	32, 34, 40, 45, 61, 64, 33, 39, 
	42, 43, 47, 57, 63, 90, 94, 126, 
	9, 13, 32, 33, 40, 46, 61, 64, 
	114, 35, 39, 42, 43, 45, 57, 63, 
	90, 94, 126, 9, 13, 32, 33, 40, 
	46, 61, 64, 105, 35, 39, 42, 43, 
	45, 57, 63, 90, 94, 126, 9, 13, 
	32, 33, 40, 46, 61, 64, 35, 39, 
	42, 43, 45, 57, 63, 90, 94, 126, 
	9, 13, 32, 40, 46, 64, 65, 68, 
	70, 74, 77, 78, 79, 83, 84, 87, 
	101, 114, 97, 111, 97, 101, 117, 9, 
	13, 32, 33, 40, 46, 61, 64, 111, 
	35, 39, 42, 43, 45, 57, 63, 90, 
	94, 126, 9, 13, 32, 33, 40, 46, 
	61, 64, 110, 35, 39, 42, 43, 45, 
	57, 63, 90, 94, 126, 9, 13, 32, 
	33, 40, 46, 61, 64, 97, 117, 35, 
	39, 42, 43, 45, 57, 63, 90, 94, 
	126, 9, 13, 32, 33, 40, 46, 61, 
	64, 116, 35, 39, 42, 43, 45, 57, 
	63, 90, 94, 126, 9, 13, 32, 33, 
	40, 46, 61, 64, 104, 117, 35, 39, 
	42, 43, 45, 57, 63, 90, 94, 126, 
	9, 13, 32, 33, 40, 46, 61, 64, 
	117, 35, 39, 42, 43, 45, 57, 63, 
	90, 94, 126, 9, 13, 32, 33, 40, 
	46, 61, 64, 101, 35, 39, 42, 43, 
	45, 57, 63, 90, 94, 126, 9, 13, 
	32, 33, 40, 46, 61, 64, 101, 35, 
	39, 42, 43, 45, 57, 63, 90, 94, 
	126, 9, 13, 32, 33, 40, 46, 61, 
	64, 100, 35, 39, 42, 43, 45, 57, 
	63, 90, 94, 126, 9, 13, 32, 92, 
	1, 8, 11, 33, 35, 127, 13, 34, 
	92, 1, 9, 11, 127, 10, 9, 32, 
	9, 13, 32, 34, 40, 46, 61, 64, 
	33, 39, 42, 43, 45, 57, 63, 90, 
	94, 126, -128, -1, 9, 13, 32, 92, 
	1, 8, 11, 33, 35, 127, 10, 9, 
	32, 9, 13, 32, 92, 1, 8, 11, 
	33, 35, 127, 13, 34, 92, 1, 9, 
	11, 127, 10, 9, 32, 9, 13, 32, 
	34, 40, 46, 61, 64, 33, 39, 42, 
	43, 45, 57, 63, 90, 94, 126, 9, 
	13, 32, 40, 46, 64, 10, 9, 32, 
	9, 13, 32, 40, 46, 64, 70, 77, 
	83, 84, 87, 9, 13, 32, 40, 46, 
	64, -128, -1, 9, 13, 32, 92, 1, 
	8, 11, 33, 35, 127, 10, 9, 32, 
	9, 13, 32, 34, 40, 46, 61, 63, 
	33, 39, 42, 43, 45, 57, 65, 90, 
	94, 126, 34, 46, 61, 63, 33, 39, 
	42, 43, 45, 57, 65, 90, 94, 126, 
	9, 13, 32, 40, 41, 92, 1, 8, 
	11, 127, 9, 13, 32, 40, 41, 92, 
	1, 8, 11, 127, 9, 13, 32, 40, 
	41, 92, 1, 8, 11, 127, 10, 9, 
	32, -128, -1, 9, 13, 32, 40, 48, 
	57, 9, 13, 32, 40, 9, 13, 32, 
	40, 0
]

class << self
	attr_accessor :_envelope_from_single_lengths
	private :_envelope_from_single_lengths, :_envelope_from_single_lengths=
end
self._envelope_from_single_lengths = [
	0, 8, 8, 1, 2, 8, 6, 1, 
	2, 11, 6, 8, 1, 2, 8, 6, 
	1, 2, 11, 6, 9, 9, 1, 2, 
	8, 5, 1, 2, 10, 5, 8, 1, 
	2, 8, 8, 1, 1, 1, 9, 2, 
	1, 1, 4, 1, 2, 4, 4, 4, 
	1, 2, 4, 1, 2, 4, 0, 5, 
	1, 2, 5, 4, 1, 2, 4, 0, 
	5, 1, 2, 5, 1, 2, 5, 0, 
	1, 2, 4, 1, 2, 4, 0, 4, 
	1, 2, 4, 1, 2, 4, 4, 5, 
	4, 1, 1, 1, 1, 1, 2, 1, 
	2, 1, 2, 1, 1, 1, 1, 1, 
	1, 1, 1, 2, 1, 2, 1, 1, 
	1, 1, 4, 3, 1, 2, 8, 4, 
	1, 2, 9, 4, 4, 0, 1, 2, 
	8, 9, 3, 1, 2, 0, 4, 3, 
	1, 2, 0, 4, 1, 2, 8, 4, 
	3, 1, 2, 7, 5, 1, 2, 10, 
	5, 0, 1, 2, 8, 8, 1, 2, 
	13, 8, 9, 9, 8, 16, 2, 2, 
	3, 9, 9, 10, 9, 10, 9, 9, 
	9, 9, 4, 3, 1, 2, 8, 0, 
	4, 1, 2, 4, 3, 1, 2, 8, 
	6, 1, 2, 11, 6, 0, 4, 1, 
	2, 8, 4, 6, 6, 6, 1, 2, 
	0, 4, 4, 4, 0
]

class << self
	attr_accessor :_envelope_from_range_lengths
	private :_envelope_from_range_lengths, :_envelope_from_range_lengths=
end
self._envelope_from_range_lengths = [
	0, 5, 5, 0, 0, 5, 0, 0, 
	0, 0, 0, 5, 0, 0, 5, 0, 
	0, 0, 0, 0, 5, 5, 0, 0, 
	5, 0, 0, 0, 0, 0, 5, 0, 
	0, 5, 5, 0, 0, 0, 0, 0, 
	0, 0, 1, 0, 0, 1, 1, 0, 
	0, 0, 1, 0, 0, 1, 1, 0, 
	0, 0, 0, 1, 0, 0, 1, 1, 
	0, 0, 0, 1, 0, 0, 1, 1, 
	0, 0, 1, 0, 0, 1, 1, 0, 
	0, 0, 1, 0, 0, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 3, 2, 0, 0, 5, 0, 
	0, 0, 0, 0, 5, 1, 0, 0, 
	5, 5, 3, 0, 0, 1, 3, 2, 
	0, 0, 1, 3, 0, 0, 5, 3, 
	2, 0, 0, 5, 0, 0, 0, 0, 
	0, 1, 0, 0, 5, 5, 0, 0, 
	5, 5, 5, 5, 5, 0, 0, 0, 
	0, 5, 5, 5, 5, 5, 5, 5, 
	5, 5, 3, 2, 0, 0, 5, 1, 
	3, 0, 0, 3, 2, 0, 0, 5, 
	0, 0, 0, 0, 0, 1, 3, 0, 
	0, 5, 5, 2, 2, 2, 0, 0, 
	1, 1, 0, 0, 0
]

class << self
	attr_accessor :_envelope_from_index_offsets
	private :_envelope_from_index_offsets, :_envelope_from_index_offsets=
end
self._envelope_from_index_offsets = [
	0, 0, 14, 28, 30, 33, 47, 54, 
	56, 59, 71, 78, 92, 94, 97, 111, 
	118, 120, 123, 135, 142, 157, 172, 174, 
	177, 191, 197, 199, 202, 213, 219, 233, 
	235, 238, 252, 266, 268, 270, 272, 282, 
	285, 287, 289, 295, 297, 300, 306, 312, 
	317, 319, 322, 328, 330, 333, 339, 341, 
	347, 349, 352, 358, 364, 366, 369, 375, 
	377, 383, 385, 388, 395, 397, 400, 407, 
	409, 411, 414, 420, 422, 425, 431, 433, 
	438, 440, 443, 449, 451, 454, 460, 465, 
	471, 476, 478, 480, 482, 484, 486, 489, 
	491, 494, 496, 499, 501, 503, 505, 507, 
	509, 511, 513, 515, 518, 520, 523, 525, 
	527, 529, 531, 539, 545, 547, 550, 564, 
	569, 571, 574, 584, 589, 599, 601, 603, 
	606, 620, 635, 642, 644, 647, 649, 657, 
	663, 665, 668, 670, 678, 680, 683, 697, 
	705, 711, 713, 716, 729, 735, 737, 740, 
	751, 757, 759, 761, 764, 778, 792, 794, 
	797, 816, 830, 845, 860, 874, 891, 894, 
	897, 901, 916, 931, 947, 962, 978, 993, 
	1008, 1023, 1038, 1046, 1052, 1054, 1057, 1071, 
	1073, 1081, 1083, 1086, 1094, 1100, 1102, 1105, 
	1119, 1126, 1128, 1131, 1143, 1150, 1152, 1160, 
	1162, 1165, 1179, 1189, 1198, 1207, 1216, 1218, 
	1221, 1223, 1229, 1234, 1239
]

class << self
	attr_accessor :_envelope_from_indicies
	private :_envelope_from_indicies, :_envelope_from_indicies=
end
self._envelope_from_indicies = [
	0, 2, 0, 4, 5, 6, 3, 3, 
	3, 3, 3, 3, 3, 1, 7, 8, 
	7, 10, 11, 12, 9, 9, 9, 9, 
	9, 9, 9, 1, 13, 1, 7, 7, 
	1, 14, 15, 16, 18, 19, 20, 17, 
	21, 17, 17, 17, 17, 17, 1, 22, 
	23, 24, 25, 26, 27, 1, 28, 1, 
	22, 22, 1, 22, 23, 24, 25, 26, 
	27, 29, 30, 31, 32, 33, 1, 34, 
	35, 36, 37, 38, 39, 1, 26, 40, 
	26, 42, 43, 41, 41, 41, 41, 41, 
	41, 41, 41, 1, 44, 1, 26, 26, 
	1, 45, 46, 47, 48, 49, 50, 48, 
	51, 48, 48, 48, 48, 48, 1, 52, 
	53, 54, 55, 26, 56, 1, 57, 1, 
	52, 52, 1, 52, 53, 54, 55, 26, 
	56, 29, 30, 31, 32, 33, 1, 58, 
	59, 60, 61, 38, 62, 1, 63, 64, 
	63, 66, 67, 68, 65, 65, 69, 65, 
	65, 65, 65, 65, 1, 70, 71, 70, 
	73, 74, 75, 72, 72, 76, 72, 72, 
	72, 72, 72, 1, 77, 1, 70, 70, 
	1, 78, 79, 80, 73, 82, 83, 81, 
	81, 81, 81, 81, 81, 81, 1, 84, 
	85, 86, 87, 88, 1, 89, 1, 84, 
	84, 1, 84, 85, 86, 87, 88, 29, 
	30, 31, 32, 33, 1, 90, 91, 92, 
	93, 94, 1, 88, 95, 88, 96, 97, 
	96, 96, 96, 96, 96, 96, 96, 96, 
	1, 98, 1, 88, 88, 1, 78, 79, 
	80, 99, 100, 101, 99, 99, 99, 99, 
	99, 99, 99, 1, 94, 102, 94, 103, 
	104, 103, 103, 103, 103, 103, 103, 103, 
	103, 1, 105, 1, 106, 1, 107, 1, 
	107, 108, 109, 110, 111, 112, 113, 114, 
	115, 1, 116, 117, 1, 118, 1, 119, 
	1, 119, 120, 119, 121, 122, 1, 123, 
	1, 119, 119, 1, 124, 125, 124, 126, 
	127, 1, 128, 129, 130, 131, 128, 1, 
	128, 129, 130, 131, 1, 132, 1, 128, 
	128, 1, 130, 133, 130, 134, 135, 1, 
	136, 1, 130, 130, 1, 137, 138, 137, 
	139, 140, 1, 141, 1, 141, 142, 141, 
	143, 144, 1, 145, 1, 141, 141, 1, 
	146, 147, 146, 148, 149, 1, 144, 150, 
	144, 151, 152, 1, 153, 1, 144, 144, 
	1, 149, 154, 149, 155, 156, 1, 157, 
	1, 157, 158, 159, 160, 161, 1, 162, 
	1, 157, 157, 1, 159, 163, 159, 164, 
	161, 165, 1, 166, 1, 159, 159, 1, 
	167, 168, 167, 169, 171, 170, 1, 172, 
	1, 173, 1, 174, 174, 1, 161, 175, 
	161, 176, 177, 1, 178, 1, 161, 161, 
	1, 171, 179, 171, 180, 181, 1, 182, 
	1, 182, 183, 184, 185, 1, 186, 1, 
	182, 182, 1, 184, 187, 184, 188, 165, 
	1, 189, 1, 184, 184, 1, 190, 191, 
	190, 192, 170, 1, 193, 194, 190, 195, 
	1, 196, 197, 167, 198, 171, 1, 199, 
	200, 137, 201, 1, 118, 1, 202, 1, 
	118, 1, 203, 1, 118, 1, 204, 205, 
	1, 118, 1, 118, 118, 1, 206, 1, 
	118, 118, 1, 207, 1, 118, 1, 208, 
	1, 118, 1, 209, 1, 118, 1, 210, 
	1, 106, 1, 211, 210, 1, 106, 1, 
	212, 213, 1, 106, 1, 106, 1, 214, 
	1, 106, 1, 73, 216, 73, 217, 215, 
	215, 215, 1, 218, 219, 217, 215, 215, 
	1, 220, 1, 215, 215, 1, 221, 222, 
	223, 73, 224, 75, 219, 219, 219, 219, 
	219, 219, 219, 1, 221, 222, 223, 224, 
	1, 225, 1, 221, 221, 1, 221, 222, 
	223, 224, 29, 30, 31, 32, 33, 1, 
	226, 227, 228, 229, 1, 73, 75, 219, 
	219, 219, 219, 219, 219, 219, 1, 215, 
	1, 230, 1, 73, 73, 1, 88, 95, 
	88, 73, 97, 75, 72, 72, 72, 72, 
	72, 72, 72, 1, 231, 232, 231, 234, 
	235, 236, 233, 233, 237, 233, 233, 233, 
	233, 233, 1, 238, 239, 221, 76, 76, 
	76, 1, 240, 1, 76, 76, 1, 76, 
	1, 242, 243, 242, 244, 241, 241, 241, 
	1, 246, 247, 248, 245, 245, 1, 249, 
	1, 245, 245, 1, 245, 1, 250, 251, 
	250, 248, 245, 245, 245, 1, 252, 1, 
	250, 250, 1, 38, 253, 38, 255, 256, 
	254, 254, 254, 254, 254, 254, 254, 254, 
	1, 18, 258, 18, 259, 257, 257, 257, 
	1, 260, 261, 259, 257, 257, 1, 262, 
	1, 257, 257, 1, 263, 264, 265, 18, 
	266, 261, 267, 261, 261, 261, 261, 261, 
	1, 268, 269, 270, 271, 27, 1, 272, 
	1, 268, 268, 1, 268, 269, 270, 271, 
	27, 29, 30, 31, 32, 33, 1, 273, 
	274, 275, 276, 39, 1, 1, 257, 277, 
	1, 18, 18, 1, 278, 279, 280, 281, 
	282, 261, 9, 267, 9, 9, 9, 9, 
	9, 1, 283, 284, 285, 42, 286, 41, 
	41, 27, 41, 41, 41, 41, 41, 1, 
	287, 1, 283, 283, 1, 283, 284, 285, 
	42, 286, 41, 41, 27, 288, 289, 290, 
	291, 292, 41, 41, 41, 41, 41, 1, 
	293, 294, 295, 255, 296, 254, 254, 39, 
	254, 254, 254, 254, 254, 1, 45, 46, 
	47, 48, 49, 50, 48, 51, 297, 48, 
	48, 48, 48, 48, 1, 45, 46, 47, 
	48, 49, 50, 48, 51, 298, 48, 48, 
	48, 48, 48, 1, 45, 46, 299, 48, 
	49, 50, 48, 51, 48, 48, 48, 48, 
	48, 1, 52, 53, 300, 55, 26, 56, 
	108, 109, 301, 111, 302, 113, 114, 303, 
	32, 33, 1, 203, 105, 1, 206, 210, 
	1, 211, 209, 210, 1, 45, 46, 47, 
	48, 49, 50, 48, 51, 304, 48, 48, 
	48, 48, 48, 1, 45, 46, 47, 48, 
	49, 50, 48, 51, 298, 48, 48, 48, 
	48, 48, 1, 45, 46, 47, 48, 49, 
	50, 48, 51, 305, 304, 48, 48, 48, 
	48, 48, 1, 45, 46, 47, 48, 49, 
	50, 48, 51, 298, 48, 48, 48, 48, 
	48, 1, 45, 46, 47, 48, 49, 50, 
	48, 51, 306, 307, 48, 48, 48, 48, 
	48, 1, 45, 46, 47, 48, 49, 50, 
	48, 51, 298, 48, 48, 48, 48, 48, 
	1, 45, 46, 47, 48, 49, 50, 48, 
	51, 298, 48, 48, 48, 48, 48, 1, 
	45, 46, 47, 48, 49, 50, 48, 51, 
	308, 48, 48, 48, 48, 48, 1, 45, 
	46, 47, 48, 49, 50, 48, 51, 298, 
	48, 48, 48, 48, 48, 1, 310, 311, 
	310, 312, 309, 309, 309, 1, 314, 315, 
	316, 313, 313, 1, 317, 1, 313, 313, 
	1, 318, 319, 320, 18, 321, 322, 261, 
	267, 261, 261, 261, 261, 261, 1, 1, 
	313, 323, 324, 323, 316, 313, 313, 313, 
	1, 325, 1, 323, 323, 1, 327, 328, 
	327, 329, 326, 326, 326, 1, 331, 332, 
	333, 330, 330, 1, 334, 1, 330, 330, 
	1, 335, 336, 337, 18, 338, 322, 261, 
	339, 261, 261, 261, 261, 261, 1, 340, 
	341, 342, 343, 26, 344, 1, 345, 1, 
	340, 340, 1, 340, 341, 342, 343, 26, 
	344, 29, 30, 31, 32, 33, 1, 346, 
	347, 348, 349, 38, 350, 1, 1, 330, 
	351, 352, 351, 333, 330, 330, 330, 1, 
	353, 1, 351, 351, 1, 354, 355, 354, 
	357, 358, 359, 356, 356, 356, 356, 356, 
	356, 356, 1, 18, 12, 261, 261, 261, 
	261, 261, 261, 261, 1, 361, 362, 361, 
	363, 364, 365, 360, 360, 1, 367, 368, 
	367, 369, 370, 371, 366, 366, 1, 372, 
	373, 372, 369, 374, 371, 366, 366, 1, 
	375, 1, 372, 372, 1, 1, 366, 174, 
	376, 174, 377, 172, 1, 174, 376, 174, 
	377, 1, 378, 379, 378, 380, 1, 1, 
	0
]

class << self
	attr_accessor :_envelope_from_trans_targs
	private :_envelope_from_trans_targs, :_envelope_from_trans_targs=
end
self._envelope_from_trans_targs = [
	2, 0, 3, 5, 187, 201, 202, 2, 
	3, 5, 187, 201, 202, 4, 6, 7, 
	9, 5, 143, 10, 156, 20, 6, 7, 
	9, 10, 11, 20, 8, 35, 105, 107, 
	109, 112, 6, 7, 9, 10, 11, 20, 
	12, 14, 134, 142, 13, 15, 16, 18, 
	14, 19, 11, 20, 15, 16, 18, 19, 
	20, 17, 15, 16, 18, 19, 20, 21, 
	22, 24, 114, 129, 124, 130, 21, 22, 
	24, 114, 129, 124, 130, 23, 25, 26, 
	28, 24, 29, 128, 25, 26, 28, 29, 
	30, 27, 25, 26, 28, 29, 30, 31, 
	33, 34, 32, 33, 29, 30, 31, 33, 
	34, 36, 37, 38, 39, 90, 92, 94, 
	97, 99, 101, 103, 40, 89, 41, 42, 
	43, 45, 46, 44, 42, 43, 45, 46, 
	47, 48, 50, 88, 49, 51, 53, 54, 
	52, 50, 51, 53, 54, 55, 56, 58, 
	59, 57, 55, 56, 58, 59, 60, 62, 
	63, 61, 60, 62, 63, 64, 65, 67, 
	87, 74, 66, 68, 70, 71, 69, 67, 
	68, 70, 71, 74, 209, 73, 210, 75, 
	77, 78, 76, 75, 77, 78, 79, 80, 
	82, 86, 81, 83, 85, 84, 82, 83, 
	85, 79, 80, 86, 64, 65, 87, 47, 
	48, 88, 91, 93, 95, 96, 98, 100, 
	102, 104, 106, 108, 110, 111, 113, 115, 
	126, 125, 116, 118, 117, 119, 120, 122, 
	123, 121, 119, 120, 122, 123, 127, 21, 
	22, 24, 114, 129, 124, 130, 131, 133, 
	132, 135, 139, 140, 138, 135, 136, 15, 
	138, 137, 139, 140, 141, 12, 14, 134, 
	142, 144, 154, 153, 145, 147, 146, 148, 
	149, 151, 152, 20, 148, 149, 151, 152, 
	150, 148, 149, 151, 152, 155, 157, 158, 
	160, 178, 161, 157, 158, 160, 161, 159, 
	162, 169, 171, 173, 176, 157, 158, 160, 
	161, 163, 164, 165, 165, 166, 167, 168, 
	170, 172, 174, 175, 177, 179, 184, 185, 
	183, 179, 180, 182, 183, 181, 6, 7, 
	9, 10, 156, 184, 185, 186, 188, 198, 
	199, 197, 188, 189, 191, 197, 190, 192, 
	193, 195, 196, 20, 192, 193, 195, 196, 
	20, 194, 192, 193, 195, 196, 20, 198, 
	199, 200, 2, 3, 5, 187, 201, 202, 
	204, 205, 206, 204, 212, 208, 204, 205, 
	206, 204, 212, 208, 205, 206, 212, 207, 
	72, 211, 210, 72, 211
]

class << self
	attr_accessor :_envelope_from_trans_actions
	private :_envelope_from_trans_actions, :_envelope_from_trans_actions=
end
self._envelope_from_trans_actions = [
	123, 0, 123, 127, 123, 132, 123, 0, 
	0, 15, 0, 27, 0, 0, 73, 73, 
	107, 0, 0, 119, 9, 111, 0, 0, 
	25, 27, 0, 19, 0, 21, 21, 21, 
	21, 21, 5, 5, 49, 52, 5, 43, 
	0, 15, 0, 27, 0, 9, 9, 64, 
	0, 67, 9, 9, 0, 0, 25, 27, 
	0, 0, 5, 5, 49, 52, 5, 7, 
	7, 58, 7, 61, 7, 7, 0, 0, 
	15, 0, 27, 0, 0, 0, 9, 9, 
	103, 0, 88, 9, 0, 0, 55, 27, 
	0, 0, 5, 5, 95, 52, 5, 0, 
	15, 27, 0, 0, 67, 9, 5, 40, 
	52, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 27, 0, 0, 5, 5, 52, 5, 
	0, 0, 0, 27, 0, 0, 27, 0, 
	0, 5, 5, 52, 5, 0, 0, 27, 
	0, 0, 5, 5, 52, 5, 0, 27, 
	0, 0, 5, 52, 5, 0, 0, 0, 
	27, 0, 0, 0, 27, 0, 0, 5, 
	5, 52, 5, 5, 0, 0, 0, 0, 
	27, 0, 0, 5, 52, 5, 0, 0, 
	0, 27, 0, 0, 27, 0, 5, 5, 
	52, 5, 5, 52, 5, 5, 52, 5, 
	5, 52, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 55, 
	27, 0, 5, 5, 95, 52, 0, 5, 
	5, 40, 5, 52, 5, 5, 0, 0, 
	0, 11, 11, 11, 11, 0, 0, 13, 
	0, 0, 0, 0, 0, 5, 40, 5, 
	52, 0, 0, 0, 0, 0, 0, 17, 
	17, 79, 82, 76, 0, 0, 25, 27, 
	0, 5, 5, 49, 52, 0, 17, 17, 
	79, 0, 82, 0, 0, 25, 27, 0, 
	70, 70, 70, 70, 70, 5, 5, 49, 
	52, 0, 0, 64, 25, 21, 21, 21, 
	0, 0, 0, 0, 0, 11, 11, 11, 
	11, 0, 0, 13, 0, 0, 17, 17, 
	79, 82, 0, 0, 0, 0, 11, 11, 
	11, 11, 0, 0, 13, 0, 0, 17, 
	17, 79, 82, 115, 0, 0, 25, 27, 
	85, 0, 5, 5, 49, 52, 99, 0, 
	0, 0, 5, 5, 40, 5, 52, 5, 
	1, 31, 31, 34, 91, 1, 0, 3, 
	3, 27, 37, 0, 0, 0, 29, 0, 
	0, 27, 5, 5, 52
]

class << self
	attr_accessor :_envelope_from_eof_actions
	private :_envelope_from_eof_actions, :_envelope_from_eof_actions=
end
self._envelope_from_eof_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 23, 23, 46, 0
]

class << self
	attr_accessor :envelope_from_start
end
self.envelope_from_start = 1;
class << self
	attr_accessor :envelope_from_first_final
end
self.envelope_from_first_final = 209;
class << self
	attr_accessor :envelope_from_error
end
self.envelope_from_error = 0;

class << self
	attr_accessor :envelope_from_en_comment_tail
end
self.envelope_from_en_comment_tail = 203;
class << self
	attr_accessor :envelope_from_en_main
end
self.envelope_from_en_main = 1;


# line 61 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
        end
        
        def parse(data)
          envelope_from = Data::EnvelopeFromData.new
          quoted_string = nil
          mark_address = nil

          p = 0
          eof = data.length
          stack = []

          
# line 687 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = envelope_from_start
	top = 0
end

# line 73 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
          
# line 697 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rb"
begin
	_klen, _trans, _keys, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_keys = _envelope_from_key_offsets[cs]
	_trans = _envelope_from_index_offsets[cs]
	_klen = _envelope_from_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if data[p].ord < _envelope_from_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif data[p].ord > _envelope_from_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _envelope_from_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if data[p].ord < _envelope_from_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif data[p].ord > _envelope_from_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	_trans = _envelope_from_indicies[_trans]
	cs = _envelope_from_trans_targs[_trans]
	if _envelope_from_trans_actions[_trans] != 0
		_acts = _envelope_from_trans_actions[_trans]
		_nacts = _envelope_from_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _envelope_from_actions[_acts - 1]
when 0 then
# line 8 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 1 then
# line 9 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 2 then
# line 10 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 3 then
# line 28 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 4 then
# line 29 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
 		end
when 5 then
# line 30 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 6 then
# line 31 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 7 then
# line 32 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 8 then
# line 34 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 9 then
# line 35 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 10 then
# line 36 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 11 then
# line 38 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 12 then
# line 39 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 13 then
# line 42 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
 mark = p 		end
when 15 then
# line 44 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
 
    mark_address = p
  		end
when 16 then
# line 47 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
 
    envelope_from.address = data[mark_address..(p-1)].rstrip
  		end
when 17 then
# line 5 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/common.rl"
		begin
 	begin
		stack[top] = cs
		top+= 1
		cs = 203
		_trigger_goto = true
		_goto_level = _again
		break
	end
 		end
when 18 then
# line 7 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/common.rl"
		begin
 	begin
		top -= 1
		cs = stack[top]
		_trigger_goto = true
		_goto_level = _again
		break
	end
 		end
# line 869 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	if cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	if p == eof
	__acts = _envelope_from_eof_actions[cs]
	__nacts =  _envelope_from_actions[__acts]
	__acts += 1
	while __nacts > 0
		__nacts -= 1
		__acts += 1
		case _envelope_from_actions[__acts - 1]
when 2 then
# line 10 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 14 then
# line 43 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
 envelope_from.ctime_date = data[mark..(p-1)] 		end
# line 905 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rb"
		end # eof action switch
	end
	if _trigger_goto
		next
	end
end
	end
	if _goto_level <= _out
		break
	end
	end
	end

# line 74 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"

          if p == eof && cs >= 
# line 922 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rb"
209
# line 75 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"

            envelope_from
          else
            envelope_from.error = "Only able to parse up to #{data[0..p]}"
            envelope_from
          end

          envelope_from
        end
      end
    end
  end
end
