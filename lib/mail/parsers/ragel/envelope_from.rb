
# line 1 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"

# line 37 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"


module Mail
  module Parsers
    module Ragel
      class MessageIdsParser
        def initialize
          
# line 14 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rb"
class << self
	attr_accessor :_envelope_from_actions
	private :_envelope_from_actions, :_envelope_from_actions=
end
self._envelope_from_actions = [
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 5, 1, 6, 1, 7, 2, 
	1, 2, 2, 3, 5, 2, 3, 6, 
	2, 7, 4
]

class << self
	attr_accessor :_envelope_from_key_offsets
	private :_envelope_from_key_offsets, :_envelope_from_key_offsets=
end
self._envelope_from_key_offsets = [
	0, 0, 18, 36, 37, 39, 57, 63, 
	64, 66, 77, 88, 99, 100, 102, 108, 
	126, 127, 129, 147, 166, 185, 186, 188, 
	211, 221, 222, 224, 235, 246, 257, 258, 
	260, 270, 288, 289, 291, 314, 338, 362, 
	387, 412, 436, 460, 483, 498, 500, 501, 
	502, 508, 509, 511, 522, 533, 544, 545, 
	547, 553, 559, 563, 564, 566, 572, 573, 
	575, 586, 597, 608, 609, 611, 617, 619, 
	624, 625, 627, 638, 649, 660, 661, 663, 
	668, 674, 675, 677, 688, 699, 710, 711, 
	713, 719, 721, 726, 727, 729, 736, 737, 
	739, 750, 761, 772, 773, 775, 782, 784, 
	785, 787, 798, 809, 820, 821, 823, 825, 
	831, 832, 834, 845, 856, 867, 868, 870, 
	876, 878, 882, 883, 885, 891, 892, 894, 
	905, 916, 927, 928, 930, 936, 938, 949, 
	960, 971, 972, 974, 978, 980, 982, 984, 
	995, 1006, 1017, 1018, 1020, 1025, 1027, 1029, 
	1031, 1033, 1044, 1055, 1066, 1067, 1069, 1073, 
	1075, 1077, 1078, 1079, 1080, 1082, 1083, 1084, 
	1085, 1094, 1095, 1097, 1098, 1100, 1101, 1103, 
	1104, 1105, 1106, 1107, 1108, 1109, 1111, 1112, 
	1115, 1116, 1118, 1119, 1120, 1121, 1122, 1146, 
	1170, 1194, 1218, 1242, 1253, 1264, 1275, 1276, 
	1278, 1296, 1298, 1299, 1300, 1302, 1304, 1322, 
	1345, 1359, 1369, 1378, 1379, 1381, 1392, 1403, 
	1414, 1415, 1417, 1426, 1428, 1452, 1476, 1501, 
	1526, 1550, 1574, 1597, 1621, 1645, 1669, 1693, 
	1717, 1728, 1739, 1750, 1751, 1753, 1772, 1781, 
	1782, 1784, 1786, 1788, 1798, 1805, 1806, 1808, 
	1810, 1820, 1821, 1823, 1834, 1845, 1856, 1857, 
	1859, 1877, 1879, 1881, 1899, 1917, 1931, 1937, 
	1942, 1943, 1945, 1956, 1967, 1978, 1979, 1981, 
	1986, 1988, 1999, 2010, 2021, 2022, 2024, 2042, 
	2044, 2050, 2054
]

class << self
	attr_accessor :_envelope_from_trans_keys
	private :_envelope_from_trans_keys, :_envelope_from_trans_keys=
end
self._envelope_from_trans_keys = [
	9, 13, 32, 34, 40, 45, 61, 63, 
	33, 39, 42, 43, 47, 57, 65, 90, 
	94, 126, 9, 13, 32, 34, 40, 45, 
	61, 63, 33, 39, 42, 43, 47, 57, 
	65, 90, 94, 126, 10, 9, 32, 9, 
	13, 32, 33, 40, 46, 61, 64, 35, 
	39, 42, 43, 45, 57, 63, 90, 94, 
	126, 9, 13, 32, 40, 46, 64, 10, 
	9, 32, 9, 13, 32, 41, 92, 1, 
	8, 11, 39, 42, 127, 9, 13, 32, 
	41, 92, 1, 8, 11, 39, 42, 127, 
	9, 13, 32, 41, 92, 1, 8, 11, 
	39, 42, 127, 10, 9, 32, 9, 13, 
	32, 40, 46, 64, 9, 13, 32, 34, 
	40, 45, 61, 63, 33, 39, 42, 43, 
	47, 57, 65, 90, 94, 126, 10, 9, 
	32, 9, 13, 32, 33, 40, 46, 61, 
	64, 35, 39, 42, 43, 45, 57, 63, 
	90, 94, 126, 9, 13, 32, 33, 40, 
	45, 61, 63, 91, 35, 39, 42, 43, 
	47, 57, 65, 90, 94, 126, 9, 13, 
	32, 33, 40, 45, 61, 63, 91, 35, 
	39, 42, 43, 47, 57, 65, 90, 94, 
	126, 10, 9, 32, 9, 13, 32, 33, 
	40, 46, 61, 63, 70, 77, 83, 84, 
	87, 35, 39, 42, 43, 45, 57, 65, 
	90, 94, 126, 9, 13, 32, 40, 46, 
	70, 77, 83, 84, 87, 10, 9, 32, 
	9, 13, 32, 41, 92, 1, 8, 11, 
	39, 42, 127, 9, 13, 32, 41, 92, 
	1, 8, 11, 39, 42, 127, 9, 13, 
	32, 41, 92, 1, 8, 11, 39, 42, 
	127, 10, 9, 32, 9, 13, 32, 40, 
	46, 70, 77, 83, 84, 87, 9, 13, 
	32, 33, 40, 45, 61, 63, 35, 39, 
	42, 43, 47, 57, 65, 90, 94, 126, 
	10, 9, 32, 9, 13, 32, 33, 40, 
	46, 61, 63, 70, 77, 83, 84, 87, 
	35, 39, 42, 43, 45, 57, 65, 90, 
	94, 126, 9, 13, 32, 33, 40, 46, 
	61, 63, 70, 77, 83, 84, 87, 114, 
	35, 39, 42, 43, 45, 57, 65, 90, 
	94, 126, 9, 13, 32, 33, 40, 46, 
	61, 63, 70, 77, 83, 84, 87, 111, 
	35, 39, 42, 43, 45, 57, 65, 90, 
	94, 126, 9, 13, 32, 33, 40, 46, 
	61, 63, 70, 77, 83, 84, 87, 97, 
	117, 35, 39, 42, 43, 45, 57, 65, 
	90, 94, 126, 9, 13, 32, 33, 40, 
	46, 61, 63, 70, 77, 83, 84, 87, 
	104, 117, 35, 39, 42, 43, 45, 57, 
	65, 90, 94, 126, 9, 13, 32, 33, 
	40, 46, 61, 63, 70, 77, 83, 84, 
	87, 101, 35, 39, 42, 43, 45, 57, 
	65, 90, 94, 126, 9, 13, 32, 33, 
	40, 46, 61, 63, 70, 77, 83, 84, 
	87, 100, 35, 39, 42, 43, 45, 57, 
	65, 90, 94, 126, 9, 13, 32, 33, 
	40, 46, 61, 63, 70, 77, 83, 84, 
	87, 35, 39, 42, 43, 45, 57, 65, 
	90, 94, 126, 9, 13, 32, 40, 46, 
	65, 68, 70, 74, 77, 78, 79, 83, 
	84, 87, 112, 117, 114, 32, 9, 13, 
	32, 40, 48, 57, 10, 9, 32, 9, 
	13, 32, 41, 92, 1, 8, 11, 39, 
	42, 127, 9, 13, 32, 41, 92, 1, 
	8, 11, 39, 42, 127, 9, 13, 32, 
	41, 92, 1, 8, 11, 39, 42, 127, 
	10, 9, 32, 9, 13, 32, 40, 48, 
	57, 9, 13, 32, 40, 48, 57, 9, 
	13, 32, 40, 10, 9, 32, 9, 13, 
	32, 40, 48, 57, 10, 9, 32, 9, 
	13, 32, 41, 92, 1, 8, 11, 39, 
	42, 127, 9, 13, 32, 41, 92, 1, 
	8, 11, 39, 42, 127, 9, 13, 32, 
	41, 92, 1, 8, 11, 39, 42, 127, 
	10, 9, 32, 9, 13, 32, 40, 48, 
	57, 48, 57, 9, 13, 32, 40, 58, 
	10, 9, 32, 9, 13, 32, 41, 92, 
	1, 8, 11, 39, 42, 127, 9, 13, 
	32, 41, 92, 1, 8, 11, 39, 42, 
	127, 9, 13, 32, 41, 92, 1, 8, 
	11, 39, 42, 127, 10, 9, 32, 9, 
	13, 32, 40, 58, 9, 13, 32, 40, 
	48, 57, 10, 9, 32, 9, 13, 32, 
	41, 92, 1, 8, 11, 39, 42, 127, 
	9, 13, 32, 41, 92, 1, 8, 11, 
	39, 42, 127, 9, 13, 32, 41, 92, 
	1, 8, 11, 39, 42, 127, 10, 9, 
	32, 9, 13, 32, 40, 48, 57, 48, 
	57, 9, 13, 32, 40, 58, 10, 9, 
	32, 9, 13, 32, 40, 58, 48, 57, 
	10, 9, 32, 9, 13, 32, 41, 92, 
	1, 8, 11, 39, 42, 127, 9, 13, 
	32, 41, 92, 1, 8, 11, 39, 42, 
	127, 9, 13, 32, 41, 92, 1, 8, 
	11, 39, 42, 127, 10, 9, 32, 9, 
	13, 32, 40, 58, 48, 57, 48, 57, 
	10, 9, 32, 9, 13, 32, 41, 92, 
	1, 8, 11, 39, 42, 127, 9, 13, 
	32, 41, 92, 1, 8, 11, 39, 42, 
	127, 9, 13, 32, 41, 92, 1, 8, 
	11, 39, 42, 127, 10, 9, 32, -128, 
	-1, 9, 13, 32, 40, 48, 57, 10, 
	9, 32, 9, 13, 32, 41, 92, 1, 
	8, 11, 39, 42, 127, 9, 13, 32, 
	41, 92, 1, 8, 11, 39, 42, 127, 
	9, 13, 32, 41, 92, 1, 8, 11, 
	39, 42, 127, 10, 9, 32, 9, 13, 
	32, 40, 48, 57, 48, 57, 9, 13, 
	32, 40, 10, 9, 32, 9, 13, 32, 
	40, 48, 57, 10, 9, 32, 9, 13, 
	32, 41, 92, 1, 8, 11, 39, 42, 
	127, 9, 13, 32, 41, 92, 1, 8, 
	11, 39, 42, 127, 9, 13, 32, 41, 
	92, 1, 8, 11, 39, 42, 127, 10, 
	9, 32, 9, 13, 32, 40, 48, 57, 
	-128, -1, 9, 13, 32, 41, 92, 1, 
	8, 11, 39, 42, 127, 9, 13, 32, 
	41, 92, 1, 8, 11, 39, 42, 127, 
	9, 13, 32, 41, 92, 1, 8, 11, 
	39, 42, 127, 10, 9, 32, 9, 13, 
	32, 40, -128, -1, 0, 127, -128, -1, 
	9, 13, 32, 41, 92, 1, 8, 11, 
	39, 42, 127, 9, 13, 32, 41, 92, 
	1, 8, 11, 39, 42, 127, 9, 13, 
	32, 41, 92, 1, 8, 11, 39, 42, 
	127, 10, 9, 32, 9, 13, 32, 40, 
	58, -128, -1, -128, -1, -128, -1, 0, 
	127, 9, 13, 32, 41, 92, 1, 8, 
	11, 39, 42, 127, 9, 13, 32, 41, 
	92, 1, 8, 11, 39, 42, 127, 9, 
	13, 32, 41, 92, 1, 8, 11, 39, 
	42, 127, 10, 9, 32, 9, 13, 32, 
	40, -128, -1, -128, -1, 103, 101, 99, 
	101, 114, 98, 105, 32, 32, 65, 68, 
	70, 74, 77, 78, 79, 83, 101, 97, 
	117, 110, 108, 110, 97, 114, 121, 111, 
	118, 99, 116, 101, 112, 97, 111, 110, 
	97, 101, 117, 116, 104, 117, 117, 101, 
	101, 100, 9, 13, 32, 33, 40, 46, 
	61, 63, 70, 77, 83, 84, 87, 117, 
	35, 39, 42, 43, 45, 57, 65, 90, 
	94, 126, 9, 13, 32, 33, 40, 46, 
	61, 63, 70, 77, 83, 84, 87, 101, 
	35, 39, 42, 43, 45, 57, 65, 90, 
	94, 126, 9, 13, 32, 33, 40, 46, 
	61, 63, 70, 77, 83, 84, 87, 116, 
	35, 39, 42, 43, 45, 57, 65, 90, 
	94, 126, 9, 13, 32, 33, 40, 46, 
	61, 63, 70, 77, 83, 84, 87, 110, 
	35, 39, 42, 43, 45, 57, 65, 90, 
	94, 126, 9, 13, 32, 33, 40, 46, 
	61, 63, 70, 77, 83, 84, 87, 105, 
	35, 39, 42, 43, 45, 57, 65, 90, 
	94, 126, 9, 13, 32, 41, 92, 1, 
	8, 11, 39, 42, 127, 9, 13, 32, 
	41, 92, 1, 8, 11, 39, 42, 127, 
	9, 13, 32, 41, 92, 1, 8, 11, 
	39, 42, 127, 10, 9, 32, 9, 13, 
	32, 33, 40, 45, 61, 63, 35, 39, 
	42, 43, 47, 57, 65, 90, 94, 126, 
	-128, -1, 114, 111, 97, 117, 0, 127, 
	9, 13, 32, 33, 40, 46, 61, 63, 
	35, 39, 42, 43, 45, 57, 65, 90, 
	94, 126, 9, 13, 32, 33, 40, 46, 
	61, 63, 70, 77, 83, 84, 87, 35, 
	39, 42, 43, 45, 57, 65, 90, 94, 
	126, 33, 46, 61, 63, 35, 39, 42, 
	43, 45, 57, 65, 90, 94, 126, 9, 
	13, 32, 40, 46, 70, 77, 83, 84, 
	87, 9, 13, 32, 40, 70, 77, 83, 
	84, 87, 10, 9, 32, 9, 13, 32, 
	41, 92, 1, 8, 11, 39, 42, 127, 
	9, 13, 32, 41, 92, 1, 8, 11, 
	39, 42, 127, 9, 13, 32, 41, 92, 
	1, 8, 11, 39, 42, 127, 10, 9, 
	32, 9, 13, 32, 40, 70, 77, 83, 
	84, 87, -128, -1, 9, 13, 32, 33, 
	40, 46, 61, 63, 70, 77, 83, 84, 
	87, 114, 35, 39, 42, 43, 45, 57, 
	65, 90, 94, 126, 9, 13, 32, 33, 
	40, 46, 61, 63, 70, 77, 83, 84, 
	87, 111, 35, 39, 42, 43, 45, 57, 
	65, 90, 94, 126, 9, 13, 32, 33, 
	40, 46, 61, 63, 70, 77, 83, 84, 
	87, 97, 117, 35, 39, 42, 43, 45, 
	57, 65, 90, 94, 126, 9, 13, 32, 
	33, 40, 46, 61, 63, 70, 77, 83, 
	84, 87, 104, 117, 35, 39, 42, 43, 
	45, 57, 65, 90, 94, 126, 9, 13, 
	32, 33, 40, 46, 61, 63, 70, 77, 
	83, 84, 87, 101, 35, 39, 42, 43, 
	45, 57, 65, 90, 94, 126, 9, 13, 
	32, 33, 40, 46, 61, 63, 70, 77, 
	83, 84, 87, 100, 35, 39, 42, 43, 
	45, 57, 65, 90, 94, 126, 9, 13, 
	32, 33, 40, 46, 61, 63, 70, 77, 
	83, 84, 87, 35, 39, 42, 43, 45, 
	57, 65, 90, 94, 126, 9, 13, 32, 
	33, 40, 46, 61, 63, 70, 77, 83, 
	84, 87, 117, 35, 39, 42, 43, 45, 
	57, 65, 90, 94, 126, 9, 13, 32, 
	33, 40, 46, 61, 63, 70, 77, 83, 
	84, 87, 101, 35, 39, 42, 43, 45, 
	57, 65, 90, 94, 126, 9, 13, 32, 
	33, 40, 46, 61, 63, 70, 77, 83, 
	84, 87, 116, 35, 39, 42, 43, 45, 
	57, 65, 90, 94, 126, 9, 13, 32, 
	33, 40, 46, 61, 63, 70, 77, 83, 
	84, 87, 110, 35, 39, 42, 43, 45, 
	57, 65, 90, 94, 126, 9, 13, 32, 
	33, 40, 46, 61, 63, 70, 77, 83, 
	84, 87, 105, 35, 39, 42, 43, 45, 
	57, 65, 90, 94, 126, 9, 13, 32, 
	41, 92, 1, 8, 11, 39, 42, 127, 
	9, 13, 32, 41, 92, 1, 8, 11, 
	39, 42, 127, 9, 13, 32, 41, 92, 
	1, 8, 11, 39, 42, 127, 10, 9, 
	32, 9, 13, 32, 33, 40, 45, 61, 
	63, 91, 35, 39, 42, 43, 47, 57, 
	65, 90, 94, 126, 13, 92, 93, 1, 
	9, 11, 90, 94, 127, 10, 9, 32, 
	-128, -1, -128, -1, 9, 13, 32, 92, 
	1, 8, 11, 33, 35, 127, 13, 34, 
	92, 1, 9, 11, 127, 10, 9, 32, 
	0, 127, 9, 13, 32, 92, 1, 8, 
	11, 33, 35, 127, 10, 9, 32, 9, 
	13, 32, 41, 92, 1, 8, 11, 39, 
	42, 127, 9, 13, 32, 41, 92, 1, 
	8, 11, 39, 42, 127, 9, 13, 32, 
	41, 92, 1, 8, 11, 39, 42, 127, 
	10, 9, 32, 9, 13, 32, 34, 40, 
	45, 61, 63, 33, 39, 42, 43, 47, 
	57, 65, 90, 94, 126, -128, -1, -128, 
	-1, 9, 13, 32, 34, 40, 46, 61, 
	63, 33, 39, 42, 43, 45, 57, 65, 
	90, 94, 126, 9, 13, 32, 33, 40, 
	46, 61, 64, 35, 39, 42, 43, 45, 
	57, 63, 90, 94, 126, 33, 46, 61, 
	63, 35, 39, 42, 43, 45, 57, 65, 
	90, 94, 126, 9, 13, 32, 40, 46, 
	64, 9, 13, 32, 40, 64, 10, 9, 
	32, 9, 13, 32, 41, 92, 1, 8, 
	11, 39, 42, 127, 9, 13, 32, 41, 
	92, 1, 8, 11, 39, 42, 127, 9, 
	13, 32, 41, 92, 1, 8, 11, 39, 
	42, 127, 10, 9, 32, 9, 13, 32, 
	40, 64, -128, -1, 9, 13, 32, 41, 
	92, 1, 8, 11, 39, 42, 127, 9, 
	13, 32, 41, 92, 1, 8, 11, 39, 
	42, 127, 9, 13, 32, 41, 92, 1, 
	8, 11, 39, 42, 127, 10, 9, 32, 
	9, 13, 32, 34, 40, 45, 61, 63, 
	33, 39, 42, 43, 47, 57, 65, 90, 
	94, 126, 0, 127, 9, 13, 32, 40, 
	48, 57, 9, 13, 32, 40, 9, 13, 
	32, 40, 0
]

class << self
	attr_accessor :_envelope_from_single_lengths
	private :_envelope_from_single_lengths, :_envelope_from_single_lengths=
end
self._envelope_from_single_lengths = [
	0, 8, 8, 1, 2, 8, 6, 1, 
	2, 5, 5, 5, 1, 2, 6, 8, 
	1, 2, 8, 9, 9, 1, 2, 13, 
	10, 1, 2, 5, 5, 5, 1, 2, 
	10, 8, 1, 2, 13, 14, 14, 15, 
	15, 14, 14, 13, 15, 2, 1, 1, 
	4, 1, 2, 5, 5, 5, 1, 2, 
	4, 4, 4, 1, 2, 4, 1, 2, 
	5, 5, 5, 1, 2, 4, 0, 5, 
	1, 2, 5, 5, 5, 1, 2, 5, 
	4, 1, 2, 5, 5, 5, 1, 2, 
	4, 0, 5, 1, 2, 5, 1, 2, 
	5, 5, 5, 1, 2, 5, 0, 1, 
	2, 5, 5, 5, 1, 2, 0, 4, 
	1, 2, 5, 5, 5, 1, 2, 4, 
	0, 4, 1, 2, 4, 1, 2, 5, 
	5, 5, 1, 2, 4, 0, 5, 5, 
	5, 1, 2, 4, 0, 0, 0, 5, 
	5, 5, 1, 2, 5, 0, 0, 0, 
	0, 5, 5, 5, 1, 2, 4, 0, 
	0, 1, 1, 1, 2, 1, 1, 1, 
	9, 1, 2, 1, 2, 1, 2, 1, 
	1, 1, 1, 1, 1, 2, 1, 3, 
	1, 2, 1, 1, 1, 1, 14, 14, 
	14, 14, 14, 5, 5, 5, 1, 2, 
	8, 0, 1, 1, 2, 0, 8, 13, 
	4, 10, 9, 1, 2, 5, 5, 5, 
	1, 2, 9, 0, 14, 14, 15, 15, 
	14, 14, 13, 14, 14, 14, 14, 14, 
	5, 5, 5, 1, 2, 9, 3, 1, 
	2, 0, 0, 4, 3, 1, 2, 0, 
	4, 1, 2, 5, 5, 5, 1, 2, 
	8, 0, 0, 8, 8, 4, 6, 5, 
	1, 2, 5, 5, 5, 1, 2, 5, 
	0, 5, 5, 5, 1, 2, 8, 0, 
	4, 4, 4
]

class << self
	attr_accessor :_envelope_from_range_lengths
	private :_envelope_from_range_lengths, :_envelope_from_range_lengths=
end
self._envelope_from_range_lengths = [
	0, 5, 5, 0, 0, 5, 0, 0, 
	0, 3, 3, 3, 0, 0, 0, 5, 
	0, 0, 5, 5, 5, 0, 0, 5, 
	0, 0, 0, 3, 3, 3, 0, 0, 
	0, 5, 0, 0, 5, 5, 5, 5, 
	5, 5, 5, 5, 0, 0, 0, 0, 
	1, 0, 0, 3, 3, 3, 0, 0, 
	1, 1, 0, 0, 0, 1, 0, 0, 
	3, 3, 3, 0, 0, 1, 1, 0, 
	0, 0, 3, 3, 3, 0, 0, 0, 
	1, 0, 0, 3, 3, 3, 0, 0, 
	1, 1, 0, 0, 0, 1, 0, 0, 
	3, 3, 3, 0, 0, 1, 1, 0, 
	0, 3, 3, 3, 0, 0, 1, 1, 
	0, 0, 3, 3, 3, 0, 0, 1, 
	1, 0, 0, 0, 1, 0, 0, 3, 
	3, 3, 0, 0, 1, 1, 3, 3, 
	3, 0, 0, 0, 1, 1, 1, 3, 
	3, 3, 0, 0, 0, 1, 1, 1, 
	1, 3, 3, 3, 0, 0, 0, 1, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 5, 5, 
	5, 5, 5, 3, 3, 3, 0, 0, 
	5, 1, 0, 0, 0, 1, 5, 5, 
	5, 0, 0, 0, 0, 3, 3, 3, 
	0, 0, 0, 1, 5, 5, 5, 5, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	3, 3, 3, 0, 0, 5, 3, 0, 
	0, 1, 1, 3, 2, 0, 0, 1, 
	3, 0, 0, 3, 3, 3, 0, 0, 
	5, 1, 1, 5, 5, 5, 0, 0, 
	0, 0, 3, 3, 3, 0, 0, 0, 
	1, 3, 3, 3, 0, 0, 5, 1, 
	1, 0, 0
]

class << self
	attr_accessor :_envelope_from_index_offsets
	private :_envelope_from_index_offsets, :_envelope_from_index_offsets=
end
self._envelope_from_index_offsets = [
	0, 0, 14, 28, 30, 33, 47, 54, 
	56, 59, 68, 77, 86, 88, 91, 98, 
	112, 114, 117, 131, 146, 161, 163, 166, 
	185, 196, 198, 201, 210, 219, 228, 230, 
	233, 244, 258, 260, 263, 282, 302, 322, 
	343, 364, 384, 404, 423, 439, 442, 444, 
	446, 452, 454, 457, 466, 475, 484, 486, 
	489, 495, 501, 506, 508, 511, 517, 519, 
	522, 531, 540, 549, 551, 554, 560, 562, 
	568, 570, 573, 582, 591, 600, 602, 605, 
	611, 617, 619, 622, 631, 640, 649, 651, 
	654, 660, 662, 668, 670, 673, 680, 682, 
	685, 694, 703, 712, 714, 717, 724, 726, 
	728, 731, 740, 749, 758, 760, 763, 765, 
	771, 773, 776, 785, 794, 803, 805, 808, 
	814, 816, 821, 823, 826, 832, 834, 837, 
	846, 855, 864, 866, 869, 875, 877, 886, 
	895, 904, 906, 909, 914, 916, 918, 920, 
	929, 938, 947, 949, 952, 958, 960, 962, 
	964, 966, 975, 984, 993, 995, 998, 1003, 
	1005, 1007, 1009, 1011, 1013, 1016, 1018, 1020, 
	1022, 1032, 1034, 1037, 1039, 1042, 1044, 1047, 
	1049, 1051, 1053, 1055, 1057, 1059, 1062, 1064, 
	1068, 1070, 1073, 1075, 1077, 1079, 1081, 1101, 
	1121, 1141, 1161, 1181, 1190, 1199, 1208, 1210, 
	1213, 1227, 1229, 1231, 1233, 1236, 1238, 1252, 
	1271, 1281, 1292, 1302, 1304, 1307, 1316, 1325, 
	1334, 1336, 1339, 1349, 1351, 1371, 1391, 1412, 
	1433, 1453, 1473, 1492, 1512, 1532, 1552, 1572, 
	1592, 1601, 1610, 1619, 1621, 1624, 1639, 1646, 
	1648, 1651, 1653, 1655, 1663, 1669, 1671, 1674, 
	1676, 1684, 1686, 1689, 1698, 1707, 1716, 1718, 
	1721, 1735, 1737, 1739, 1753, 1767, 1777, 1784, 
	1790, 1792, 1795, 1804, 1813, 1822, 1824, 1827, 
	1833, 1835, 1844, 1853, 1862, 1864, 1867, 1881, 
	1883, 1889, 1894
]

class << self
	attr_accessor :_envelope_from_trans_targs
	private :_envelope_from_trans_targs, :_envelope_from_trans_targs=
end
self._envelope_from_trans_targs = [
	2, 3, 2, 243, 273, 5, 5, 5, 
	5, 5, 5, 5, 5, 0, 2, 3, 
	2, 243, 273, 5, 5, 5, 5, 5, 
	5, 5, 5, 0, 4, 0, 2, 2, 
	0, 6, 7, 6, 5, 9, 259, 5, 
	19, 5, 5, 5, 5, 5, 0, 6, 
	7, 6, 9, 15, 19, 0, 8, 0, 
	6, 6, 0, 11, 12, 11, 14, 258, 
	10, 10, 10, 0, 11, 12, 11, 14, 
	258, 10, 10, 10, 0, 11, 12, 11, 
	14, 258, 10, 10, 10, 0, 13, 0, 
	11, 11, 0, 6, 7, 6, 9, 15, 
	19, 0, 15, 16, 15, 243, 251, 18, 
	18, 18, 18, 18, 18, 18, 18, 0, 
	17, 0, 15, 15, 0, 6, 7, 6, 
	18, 9, 15, 18, 19, 18, 18, 18, 
	18, 18, 0, 20, 21, 20, 23, 232, 
	23, 23, 23, 238, 23, 23, 23, 23, 
	23, 0, 20, 21, 20, 23, 232, 23, 
	23, 23, 238, 23, 23, 23, 23, 23, 
	0, 22, 0, 20, 20, 0, 24, 25, 
	24, 23, 27, 206, 23, 23, 220, 221, 
	222, 223, 224, 23, 23, 23, 23, 23, 
	0, 24, 25, 24, 27, 33, 202, 203, 
	204, 185, 188, 0, 26, 0, 24, 24, 
	0, 29, 30, 29, 32, 205, 28, 28, 
	28, 0, 29, 30, 29, 32, 205, 28, 
	28, 28, 0, 29, 30, 29, 32, 205, 
	28, 28, 28, 0, 31, 0, 29, 29, 
	0, 24, 25, 24, 27, 33, 202, 203, 
	204, 185, 188, 0, 33, 34, 33, 36, 
	195, 36, 36, 36, 36, 36, 36, 36, 
	36, 0, 35, 0, 33, 33, 0, 24, 
	25, 24, 36, 27, 33, 36, 36, 37, 
	38, 39, 40, 41, 36, 36, 36, 36, 
	36, 0, 24, 25, 24, 36, 27, 33, 
	36, 36, 37, 38, 39, 40, 41, 194, 
	36, 36, 36, 36, 36, 0, 24, 25, 
	24, 36, 27, 33, 36, 36, 37, 38, 
	39, 40, 41, 193, 36, 36, 36, 36, 
	36, 0, 24, 25, 24, 36, 27, 33, 
	36, 36, 37, 38, 39, 40, 41, 192, 
	193, 36, 36, 36, 36, 36, 0, 24, 
	25, 24, 36, 27, 33, 36, 36, 37, 
	38, 39, 40, 41, 190, 191, 36, 36, 
	36, 36, 36, 0, 24, 25, 24, 36, 
	27, 33, 36, 36, 37, 38, 39, 40, 
	41, 42, 36, 36, 36, 36, 36, 0, 
	24, 25, 24, 36, 27, 33, 36, 36, 
	37, 38, 39, 40, 41, 43, 36, 36, 
	36, 36, 36, 0, 24, 25, 44, 36, 
	27, 33, 36, 36, 37, 38, 39, 40, 
	41, 36, 36, 36, 36, 36, 0, 24, 
	25, 44, 27, 33, 45, 162, 164, 170, 
	181, 175, 177, 183, 185, 188, 0, 46, 
	161, 0, 47, 0, 48, 0, 48, 49, 
	48, 51, 57, 0, 50, 0, 48, 48, 
	0, 53, 54, 53, 56, 160, 52, 52, 
	52, 0, 53, 54, 53, 56, 160, 52, 
	52, 52, 0, 53, 54, 53, 56, 160, 
	52, 52, 52, 0, 55, 0, 53, 53, 
	0, 48, 49, 48, 51, 57, 0, 58, 
	59, 61, 153, 58, 0, 58, 59, 61, 
	153, 0, 60, 0, 58, 58, 0, 61, 
	62, 61, 64, 70, 0, 63, 0, 61, 
	61, 0, 66, 67, 66, 69, 152, 65, 
	65, 65, 0, 66, 67, 66, 69, 152, 
	65, 65, 65, 0, 66, 67, 66, 69, 
	152, 65, 65, 65, 0, 68, 0, 66, 
	66, 0, 61, 62, 61, 64, 70, 0, 
	71, 0, 71, 72, 71, 74, 80, 0, 
	73, 0, 71, 71, 0, 76, 77, 76, 
	79, 151, 75, 75, 75, 0, 76, 77, 
	76, 79, 151, 75, 75, 75, 0, 76, 
	77, 76, 79, 151, 75, 75, 75, 0, 
	78, 0, 76, 76, 0, 71, 72, 71, 
	74, 80, 0, 80, 81, 80, 83, 89, 
	0, 82, 0, 80, 80, 0, 85, 86, 
	85, 88, 150, 84, 84, 84, 0, 85, 
	86, 85, 88, 150, 84, 84, 84, 0, 
	85, 86, 85, 88, 150, 84, 84, 84, 
	0, 87, 0, 85, 85, 0, 80, 81, 
	80, 83, 89, 0, 90, 0, 90, 91, 
	93, 143, 111, 0, 92, 0, 90, 90, 
	0, 93, 94, 93, 96, 111, 102, 0, 
	95, 0, 93, 93, 0, 98, 99, 98, 
	101, 142, 97, 97, 97, 0, 98, 99, 
	98, 101, 142, 97, 97, 97, 0, 98, 
	99, 98, 101, 142, 97, 97, 97, 0, 
	100, 0, 98, 98, 0, 93, 94, 93, 
	96, 111, 102, 0, 280, 0, 104, 0, 
	281, 281, 0, 107, 108, 107, 282, 110, 
	106, 106, 106, 0, 107, 108, 107, 282, 
	110, 106, 106, 106, 0, 107, 108, 107, 
	282, 110, 106, 106, 106, 0, 109, 0, 
	107, 107, 0, 0, 106, 111, 112, 111, 
	114, 120, 0, 113, 0, 111, 111, 0, 
	116, 117, 116, 119, 141, 115, 115, 115, 
	0, 116, 117, 116, 119, 141, 115, 115, 
	115, 0, 116, 117, 116, 119, 141, 115, 
	115, 115, 0, 118, 0, 116, 116, 0, 
	111, 112, 111, 114, 120, 0, 121, 0, 
	121, 122, 124, 134, 0, 123, 0, 121, 
	121, 0, 124, 125, 124, 127, 102, 0, 
	126, 0, 124, 124, 0, 129, 130, 129, 
	132, 133, 128, 128, 128, 0, 129, 130, 
	129, 132, 133, 128, 128, 128, 0, 129, 
	130, 129, 132, 133, 128, 128, 128, 0, 
	131, 0, 129, 129, 0, 124, 125, 124, 
	127, 102, 0, 0, 128, 136, 137, 136, 
	139, 140, 135, 135, 135, 0, 136, 137, 
	136, 139, 140, 135, 135, 135, 0, 136, 
	137, 136, 139, 140, 135, 135, 135, 0, 
	138, 0, 136, 136, 0, 121, 122, 124, 
	134, 0, 0, 135, 115, 0, 0, 97, 
	145, 146, 145, 148, 149, 144, 144, 144, 
	0, 145, 146, 145, 148, 149, 144, 144, 
	144, 0, 145, 146, 145, 148, 149, 144, 
	144, 144, 0, 147, 0, 145, 145, 0, 
	90, 91, 93, 143, 111, 0, 0, 144, 
	0, 84, 0, 75, 65, 0, 155, 156, 
	155, 158, 159, 154, 154, 154, 0, 155, 
	156, 155, 158, 159, 154, 154, 154, 0, 
	155, 156, 155, 158, 159, 154, 154, 154, 
	0, 157, 0, 155, 155, 0, 58, 59, 
	61, 153, 0, 0, 154, 0, 52, 47, 
	0, 163, 0, 47, 0, 165, 166, 0, 
	47, 0, 167, 0, 168, 0, 168, 45, 
	162, 169, 170, 173, 175, 177, 179, 0, 
	165, 0, 171, 172, 0, 47, 0, 47, 
	47, 0, 174, 0, 47, 47, 0, 176, 
	0, 47, 0, 178, 0, 47, 0, 180, 
	0, 47, 0, 174, 182, 0, 167, 0, 
	184, 180, 182, 0, 167, 0, 186, 187, 
	0, 167, 0, 167, 0, 189, 0, 167, 
	0, 24, 25, 24, 36, 27, 33, 36, 
	36, 37, 38, 39, 40, 41, 43, 36, 
	36, 36, 36, 36, 0, 24, 25, 24, 
	36, 27, 33, 36, 36, 37, 38, 39, 
	40, 41, 43, 36, 36, 36, 36, 36, 
	0, 24, 25, 24, 36, 27, 33, 36, 
	36, 37, 38, 39, 40, 41, 43, 36, 
	36, 36, 36, 36, 0, 24, 25, 24, 
	36, 27, 33, 36, 36, 37, 38, 39, 
	40, 41, 43, 36, 36, 36, 36, 36, 
	0, 24, 25, 24, 36, 27, 33, 36, 
	36, 37, 38, 39, 40, 41, 43, 36, 
	36, 36, 36, 36, 0, 197, 198, 197, 
	200, 201, 196, 196, 196, 0, 197, 198, 
	197, 200, 201, 196, 196, 196, 0, 197, 
	198, 197, 200, 201, 196, 196, 196, 0, 
	199, 0, 197, 197, 0, 33, 34, 33, 
	36, 195, 36, 36, 36, 36, 36, 36, 
	36, 36, 0, 0, 196, 166, 0, 182, 
	0, 184, 182, 0, 28, 0, 33, 34, 
	33, 207, 195, 208, 207, 207, 207, 207, 
	207, 207, 207, 0, 24, 25, 24, 36, 
	27, 206, 36, 36, 37, 38, 39, 40, 
	41, 36, 36, 36, 36, 36, 0, 209, 
	208, 209, 209, 209, 209, 209, 209, 209, 
	0, 210, 211, 210, 213, 208, 202, 203, 
	204, 185, 188, 0, 210, 211, 210, 213, 
	202, 203, 204, 185, 188, 0, 212, 0, 
	210, 210, 0, 215, 216, 215, 218, 219, 
	214, 214, 214, 0, 215, 216, 215, 218, 
	219, 214, 214, 214, 0, 215, 216, 215, 
	218, 219, 214, 214, 214, 0, 217, 0, 
	215, 215, 0, 210, 211, 210, 213, 202, 
	203, 204, 185, 188, 0, 0, 214, 24, 
	25, 24, 23, 27, 206, 23, 23, 220, 
	221, 222, 223, 224, 231, 23, 23, 23, 
	23, 23, 0, 24, 25, 24, 23, 27, 
	206, 23, 23, 220, 221, 222, 223, 224, 
	230, 23, 23, 23, 23, 23, 0, 24, 
	25, 24, 23, 27, 206, 23, 23, 220, 
	221, 222, 223, 224, 229, 230, 23, 23, 
	23, 23, 23, 0, 24, 25, 24, 23, 
	27, 206, 23, 23, 220, 221, 222, 223, 
	224, 227, 228, 23, 23, 23, 23, 23, 
	0, 24, 25, 24, 23, 27, 206, 23, 
	23, 220, 221, 222, 223, 224, 225, 23, 
	23, 23, 23, 23, 0, 24, 25, 24, 
	23, 27, 206, 23, 23, 220, 221, 222, 
	223, 224, 226, 23, 23, 23, 23, 23, 
	0, 24, 25, 44, 23, 27, 206, 23, 
	23, 220, 221, 222, 223, 224, 23, 23, 
	23, 23, 23, 0, 24, 25, 24, 23, 
	27, 206, 23, 23, 220, 221, 222, 223, 
	224, 226, 23, 23, 23, 23, 23, 0, 
	24, 25, 24, 23, 27, 206, 23, 23, 
	220, 221, 222, 223, 224, 226, 23, 23, 
	23, 23, 23, 0, 24, 25, 24, 23, 
	27, 206, 23, 23, 220, 221, 222, 223, 
	224, 226, 23, 23, 23, 23, 23, 0, 
	24, 25, 24, 23, 27, 206, 23, 23, 
	220, 221, 222, 223, 224, 226, 23, 23, 
	23, 23, 23, 0, 24, 25, 24, 23, 
	27, 206, 23, 23, 220, 221, 222, 223, 
	224, 226, 23, 23, 23, 23, 23, 0, 
	234, 235, 234, 237, 242, 233, 233, 233, 
	0, 234, 235, 234, 237, 242, 233, 233, 
	233, 0, 234, 235, 234, 237, 242, 233, 
	233, 233, 0, 236, 0, 234, 234, 0, 
	20, 21, 20, 23, 232, 23, 23, 23, 
	238, 23, 23, 23, 23, 23, 0, 239, 
	241, 210, 238, 238, 238, 0, 240, 0, 
	238, 238, 0, 0, 238, 0, 233, 248, 
	249, 248, 247, 244, 244, 244, 0, 245, 
	6, 247, 244, 244, 0, 246, 0, 244, 
	244, 0, 244, 0, 248, 249, 248, 247, 
	244, 244, 244, 0, 250, 0, 248, 248, 
	0, 253, 254, 253, 256, 257, 252, 252, 
	252, 0, 253, 254, 253, 256, 257, 252, 
	252, 252, 0, 253, 254, 253, 256, 257, 
	252, 252, 252, 0, 255, 0, 253, 253, 
	0, 15, 16, 15, 243, 251, 18, 18, 
	18, 18, 18, 18, 18, 18, 0, 0, 
	252, 0, 10, 15, 16, 15, 243, 251, 
	261, 260, 260, 260, 260, 260, 260, 260, 
	0, 6, 7, 6, 18, 9, 259, 18, 
	19, 18, 18, 18, 18, 18, 0, 262, 
	261, 262, 262, 262, 262, 262, 262, 262, 
	0, 263, 264, 263, 266, 261, 19, 0, 
	263, 264, 263, 266, 19, 0, 265, 0, 
	263, 263, 0, 268, 269, 268, 271, 272, 
	267, 267, 267, 0, 268, 269, 268, 271, 
	272, 267, 267, 267, 0, 268, 269, 268, 
	271, 272, 267, 267, 267, 0, 270, 0, 
	268, 268, 0, 263, 264, 263, 266, 19, 
	0, 0, 267, 275, 276, 275, 278, 279, 
	274, 274, 274, 0, 275, 276, 275, 278, 
	279, 274, 274, 274, 0, 275, 276, 275, 
	278, 279, 274, 274, 274, 0, 277, 0, 
	275, 275, 0, 2, 3, 2, 243, 273, 
	5, 5, 5, 5, 5, 5, 5, 5, 
	0, 274, 0, 281, 103, 281, 105, 280, 
	0, 281, 103, 281, 105, 0, 281, 103, 
	281, 105, 0, 0
]

class << self
	attr_accessor :_envelope_from_trans_actions
	private :_envelope_from_trans_actions, :_envelope_from_trans_actions=
end
self._envelope_from_trans_actions = [
	24, 24, 24, 24, 24, 24, 24, 24, 
	24, 24, 24, 24, 24, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	9, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 9, 0, 0, 0, 
	0, 0, 0, 15, 15, 15, 15, 3, 
	3, 3, 3, 0, 5, 5, 5, 5, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 7, 7, 7, 7, 7, 
	18, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 9, 0, 0, 0, 
	0, 0, 0, 13, 13, 13, 13, 13, 
	13, 13, 13, 13, 13, 13, 13, 13, 
	13, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 11, 11, 
	11, 11, 11, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 11, 11, 
	11, 11, 11, 0, 0, 0, 0, 0, 
	0, 15, 15, 15, 15, 3, 3, 3, 
	3, 0, 5, 5, 5, 5, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 7, 7, 7, 7, 7, 21, 21, 
	21, 21, 21, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 11, 
	11, 11, 11, 11, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 11, 11, 11, 11, 11, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 11, 11, 
	11, 11, 11, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 11, 11, 11, 11, 11, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 11, 
	11, 11, 11, 11, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 11, 11, 11, 11, 
	11, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	11, 11, 11, 11, 11, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 11, 11, 11, 11, 
	11, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 11, 0, 
	11, 0, 0, 11, 11, 11, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 15, 15, 15, 15, 3, 3, 3, 
	3, 0, 5, 5, 5, 5, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 7, 7, 7, 7, 7, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 15, 15, 15, 15, 3, 3, 
	3, 3, 0, 5, 5, 5, 5, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 7, 7, 7, 7, 7, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 15, 15, 15, 
	15, 3, 3, 3, 3, 0, 5, 5, 
	5, 5, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 7, 7, 7, 
	7, 7, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 15, 15, 
	15, 15, 3, 3, 3, 3, 0, 5, 
	5, 5, 5, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 7, 7, 
	7, 7, 7, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 15, 15, 15, 
	15, 3, 3, 3, 3, 0, 5, 5, 
	5, 5, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 7, 7, 7, 
	7, 7, 7, 0, 0, 0, 0, 0, 
	0, 0, 0, 15, 15, 15, 15, 3, 
	3, 3, 3, 0, 5, 5, 5, 5, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	15, 15, 15, 15, 3, 3, 3, 3, 
	0, 5, 5, 5, 5, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	7, 7, 7, 7, 7, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 15, 15, 15, 
	15, 3, 3, 3, 3, 0, 5, 5, 
	5, 5, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 7, 7, 7, 
	7, 7, 0, 0, 0, 15, 15, 15, 
	15, 3, 3, 3, 3, 0, 5, 5, 
	5, 5, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 7, 7, 7, 
	7, 0, 0, 0, 0, 0, 0, 0, 
	15, 15, 15, 15, 3, 3, 3, 3, 
	0, 5, 5, 5, 5, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	7, 7, 7, 7, 7, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 15, 15, 
	15, 15, 3, 3, 3, 3, 0, 5, 
	5, 5, 5, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 7, 7, 
	7, 7, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 11, 11, 11, 11, 11, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 11, 11, 11, 
	11, 11, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 11, 11, 11, 11, 11, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 11, 11, 11, 
	11, 11, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 11, 11, 11, 11, 11, 0, 0, 
	0, 0, 0, 0, 0, 15, 15, 15, 
	15, 3, 3, 3, 3, 0, 5, 5, 
	5, 5, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 11, 11, 11, 11, 
	11, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 11, 11, 
	11, 11, 11, 0, 0, 0, 0, 0, 
	11, 11, 11, 11, 11, 0, 0, 0, 
	0, 0, 0, 15, 15, 15, 15, 3, 
	3, 3, 3, 0, 5, 5, 5, 5, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 7, 7, 7, 7, 21, 
	21, 21, 21, 21, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 11, 
	11, 11, 11, 11, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 11, 11, 11, 11, 11, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 11, 
	11, 11, 11, 11, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 11, 11, 11, 11, 
	11, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 11, 11, 11, 11, 11, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 11, 11, 11, 
	11, 11, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 11, 11, 11, 11, 11, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 11, 11, 11, 11, 
	11, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	11, 11, 11, 11, 11, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 11, 11, 11, 11, 
	11, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	11, 11, 11, 11, 11, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 11, 11, 11, 11, 
	11, 0, 0, 0, 0, 0, 0, 0, 
	15, 15, 15, 15, 3, 3, 3, 3, 
	0, 5, 5, 5, 5, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 13, 
	13, 13, 13, 13, 13, 13, 0, 0, 
	1, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 15, 15, 15, 15, 3, 3, 3, 
	3, 0, 5, 5, 5, 5, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	9, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 9, 0, 
	0, 0, 0, 0, 9, 0, 0, 0, 
	0, 0, 0, 15, 15, 15, 15, 3, 
	3, 3, 3, 0, 5, 5, 5, 5, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 7, 7, 7, 7, 18, 
	0, 0, 0, 15, 15, 15, 15, 3, 
	3, 3, 3, 0, 5, 5, 5, 5, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 7, 7, 
	7, 7, 0, 0
]

class << self
	attr_accessor :_envelope_from_eof_actions
	private :_envelope_from_eof_actions, :_envelope_from_eof_actions=
end
self._envelope_from_eof_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 7
]

class << self
	attr_accessor :envelope_from_start
end
self.envelope_from_start = 1;
class << self
	attr_accessor :envelope_from_first_final
end
self.envelope_from_first_final = 280;
class << self
	attr_accessor :envelope_from_error
end
self.envelope_from_error = 0;

class << self
	attr_accessor :envelope_from_en_main
end
self.envelope_from_en_main = 1;


# line 45 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
        end
        
        def parse(data)
          message_ids = Data::MessageIdsData.new([])

          p = 0
          eof = data.length

          
# line 1025 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = envelope_from_start
end

# line 54 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
          
# line 1034 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rb"
begin
	_klen, _trans, _keys, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_keys = _envelope_from_key_offsets[cs]
	_trans = _envelope_from_index_offsets[cs]
	_klen = _envelope_from_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if data[p].ord < _envelope_from_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif data[p].ord > _envelope_from_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _envelope_from_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if data[p].ord < _envelope_from_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif data[p].ord > _envelope_from_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	cs = _envelope_from_trans_targs[_trans]
	if _envelope_from_trans_actions[_trans] != 0
		_acts = _envelope_from_trans_actions[_trans]
		_nacts = _envelope_from_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _envelope_from_actions[_acts - 1]
when 0 then
# line 7 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
 		end
when 1 then
# line 11 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 2 then
# line 12 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 3 then
# line 13 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 4 then
# line 14 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 5 then
# line 15 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 6 then
# line 16 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
when 7 then
# line 32 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
 mark = p 		end
# line 1146 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	if cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	if p == eof
	__acts = _envelope_from_eof_actions[cs]
	__nacts =  _envelope_from_actions[__acts]
	__acts += 1
	while __nacts > 0
		__nacts -= 1
		__acts += 1
		case _envelope_from_actions[__acts - 1]
when 3 then
# line 13 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"
		begin
		end
# line 1178 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rb"
		end # eof action switch
	end
	if _trigger_goto
		next
	end
end
	end
	if _goto_level <= _out
		break
	end
	end
	end

# line 55 "/home/bpot/src/Dist/GH/mikel/mail/lib/mail/parsers/ragel/envelope_from.rl"

          if p != eof
          #  puts "FAILURE"
          #  p data
          #  p data[0..p]
            raise "FAILED TO PARSE" 
          end

          message_ids
        end
      end
    end
  end
end
